{
  "openapi": "3.0.1",
  "info": {
    "title": "AtomSphere Platform API",
    "description": "The AtomSphere Platform API allows for control of many objects associated with your account.",
    "contact": {
      "name": "Customer Support",
      "url": "https://community.boomi.com/s/support",
      "email": "support@boomi.com"
    },
    "license": {
      "name": "Boomi API License",
      "url": "https://help.boomi.com/bundle/about/page/atm-API_licensing.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.boomi.com/api/rest/v1/{accountId}",
      "description": "Boomi API Endpoint URL",
      "variables": {
        "accountId": {
          "description": "The Account id to make this request as.",
          "default": "hannoverrckse-S4QY6A"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "account"
    },
    {
      "name": "atom"
    },
    {
      "name": "component"
    },
    {
      "name": "deployment"
    },
    {
      "name": "documentTracking"
    },
    {
      "name": "environment"
    },
    {
      "name": "execution"
    },
    {
      "name": "executionStatistic"
    },
    {
      "name": "integrationpack"
    }
  ],
  "paths": {
    "/AS2ConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for an AS2ConnectorRecord object(s).",
        "operationId": "QueryAS2ConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AS2ConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AS2ConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AS2ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AS2ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AS2ConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for an AS2ConnectorRecord query.",
        "operationId": "QueryMoreAS2ConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AS2ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AS2ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Account/bulk": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves multiple Account objects by identifier.",
        "operationId": "BulkAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Account/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an Account object(s).",
        "operationId": "QueryAccount",
        "requestBody": {
          "description": " Possible properties include: ACCOUNTID, DATECREATED, EXPIRATIONDATE, NAME, STATUS, WIDGETACCOUNT, OVERDEPLOYED",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Account/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an Account query.",
        "operationId": "QueryMoreAccount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Account/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves an instance of an Account object.",
        "operationId": "GetAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountCloudAttachmentProperties/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an AccountCloudAttachmentProperties object.",
        "operationId": "UpdateAccountCloudAttachmentProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentProperties"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentProperties"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentProperties"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountCloudAttachmentQuota": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates an AccountCloudAttachmentQuota object.",
        "operationId": "CreateAccountCloudAttachmentQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountCloudAttachmentQuota/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple AccountCloudAttachmentQuota objects by identifier.",
        "operationId": "BulkAccountCloudAttachmentQuota",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuotaBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuotaBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuotaBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuotaBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountCloudAttachmentQuota/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of an AccountCloudAttachmentQuota object.",
        "operationId": "GetAccountCloudAttachmentQuota",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an AccountCloudAttachmentQuota object.",
        "operationId": "UpdateAccountCloudAttachmentQuota",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "atom"
        ],
        "summary": "Deletes an AccountCloudAttachmentQuota object.",
        "operationId": "DeleteAccountCloudAttachmentQuota",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroup": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an AccountGroup object.",
        "operationId": "CreateAccountGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroup/bulk": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves multiple AccountGroup objects by identifier.",
        "operationId": "BulkAccountGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroup/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AccountGroup object(s).",
        "operationId": "QueryAccountGroup",
        "requestBody": {
          "description": " Possible properties include: id, accountId, name, defaultGroup, autoSubscribeAlertLevel",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroup/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AccountGroup query.",
        "operationId": "QueryMoreAccountGroup",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroup/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves an instance of an AccountGroup object.",
        "operationId": "GetAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Modifies or updates an AccountGroup object.",
        "operationId": "UpdateAccountGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupAccount": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an AccountGroupAccount object.",
        "operationId": "CreateAccountGroupAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupAccount"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupAccount"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccount"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccount"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupAccount/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AccountGroupAccount object(s).",
        "operationId": "QueryAccountGroupAccount",
        "requestBody": {
          "description": " Possible properties include: accountGroupId, accountId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupAccountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupAccountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupAccount/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AccountGroupAccount query.",
        "operationId": "QueryMoreAccountGroupAccount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupAccount/{id}": {
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an AccountGroupAccount object.",
        "operationId": "DeleteAccountGroupAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupUserRole": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an AccountGroupUserRole object.",
        "operationId": "CreateAccountGroupUserRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupUserRole"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupUserRole"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRole"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupUserRole/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AccountGroupUserRole object(s).",
        "operationId": "QueryAccountGroupUserRole",
        "requestBody": {
          "description": " Possible properties include: accountGroupId, userId, roleId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupUserRoleQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountGroupUserRoleQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupUserRole/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AccountGroupUserRole query.",
        "operationId": "QueryMoreAccountGroupUserRole",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountGroupUserRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountGroupUserRole/{id}": {
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an AccountGroupUserRole object.",
        "operationId": "DeleteAccountGroupUserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountSSOConfig/bulk": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves multiple AccountSSOConfig objects by identifier.",
        "operationId": "BulkAccountSSOConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSSOConfigBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountSSOConfigBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfigBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfigBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountSSOConfig/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves an instance of an AccountSSOConfig object.",
        "operationId": "GetAccountSSOConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfig"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Modifies or updates an AccountSSOConfig object.",
        "operationId": "UpdateAccountSSOConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountSSOConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountSSOConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfig"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountSSOConfig"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an AccountSSOConfig object.",
        "operationId": "DeleteAccountSSOConfig",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserFederation": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an AccountUserFederation object.",
        "operationId": "CreateAccountUserFederation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederation"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserFederation/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AccountUserFederation object(s).",
        "operationId": "QueryAccountUserFederation",
        "requestBody": {
          "description": " Possible properties include: accountId, userId, federationId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederationQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederationQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederationQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederationQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserFederation/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AccountUserFederation query.",
        "operationId": "QueryMoreAccountUserFederation",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederationQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederationQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserFederation/{id}": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Modifies or updates an AccountUserFederation object.",
        "operationId": "UpdateAccountUserFederation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserFederation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserFederation"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an AccountUserFederation object.",
        "operationId": "DeleteAccountUserFederation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserRole": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates an AccountUserRole object.",
        "operationId": "CreateAccountUserRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserRole"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserRole"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRole"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserRole/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AccountUserRole object(s).",
        "operationId": "QueryAccountUserRole",
        "requestBody": {
          "description": " Possible properties include: accountId, userId, roleId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserRoleQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AccountUserRoleQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserRole/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AccountUserRole query.",
        "operationId": "QueryMoreAccountUserRole",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountUserRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AccountUserRole/{id}": {
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an AccountUserRole object.",
        "operationId": "DeleteAccountUserRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ApiUsageCount/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an ApiUsageCount object(s).",
        "operationId": "QueryApiUsageCount",
        "requestBody": {
          "description": " Possible properties include: processDate, classification, successCount, errorCount",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApiUsageCountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ApiUsageCountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUsageCountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUsageCountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ApiUsageCount/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an ApiUsageCount query.",
        "operationId": "QueryMoreApiUsageCount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUsageCountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiUsageCountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Atom": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates an Atom object.",
        "operationId": "CreateAtom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Atom"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Atom"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Atom/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple Atom objects by identifier.",
        "operationId": "BulkAtom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Atom/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Queries for an Atom object(s).",
        "operationId": "QueryAtom",
        "requestBody": {
          "description": " Possible properties include: name, id, hostname, status, type, capabilities",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Atom/queryMore": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves additional results for an Atom query.",
        "operationId": "QueryMoreAtom",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Atom/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of an Atom object.",
        "operationId": "GetAtom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an Atom object.",
        "operationId": "UpdateAtom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Atom"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Atom"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Atom"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "atom"
        ],
        "summary": "Deletes an Atom object.",
        "operationId": "DeleteAtom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomAS2Artifacts": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates an AtomAS2Artifacts object.",
        "operationId": "CreateAtomAS2Artifacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomAS2Artifacts"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomAS2Artifacts"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomAS2Artifacts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomAS2Artifacts"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomConnectionFieldExtensionSummary/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an AtomConnectionFieldExtensionSummary object(s).",
        "operationId": "QueryAtomConnectionFieldExtensionSummary",
        "requestBody": {
          "description": " Possible properties include: atomId, extensionGroupId, connectionId, fieldId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomConnectionFieldExtensionSummary/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an AtomConnectionFieldExtensionSummary query.",
        "operationId": "QueryMoreAtomConnectionFieldExtensionSummary",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomConnectorVersions/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple AtomConnectorVersions objects by identifier.",
        "operationId": "BulkAtomConnectorVersions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomConnectorVersionsBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomConnectorVersionsBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectorVersionsBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectorVersionsBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomConnectorVersions/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of an AtomConnectorVersions object.",
        "operationId": "GetAtomConnectorVersions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectorVersions"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomConnectorVersions"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomCounters/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an AtomCounters object.",
        "operationId": "UpdateAtomCounters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomCounters"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomCounters"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomCounters"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomCounters"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomLog": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates an AtomLog object.",
        "operationId": "CreateAtomLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomLog"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomLog"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomLog"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomPurge/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an AtomPurge object.",
        "operationId": "UpdateAtomPurge",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomPurge"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomPurge"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomPurge"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomPurge"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomSecurityPolicies/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates an AtomSecurityPolicies object.",
        "operationId": "UpdateAtomSecurityPolicies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomSecurityPolicies"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomSecurityPolicies"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomSecurityPolicies"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomSecurityPolicies"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomStartupProperties/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple AtomStartupProperties objects by identifier.",
        "operationId": "BulkAtomStartupProperties",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomStartupPropertiesBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomStartupPropertiesBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomStartupPropertiesBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomStartupPropertiesBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomStartupProperties/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of an AtomStartupProperties object.",
        "operationId": "GetAtomStartupProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomStartupProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomStartupProperties"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AtomWorkerLog": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates an AtomWorkerLog object.",
        "operationId": "CreateAtomWorkerLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AtomWorkerLog"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AtomWorkerLog"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomWorkerLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomWorkerLog"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AuditLog/bulk": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves multiple AuditLog objects by identifier.",
        "operationId": "BulkAuditLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AuditLog/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for an AuditLog object(s).",
        "operationId": "QueryAuditLog",
        "requestBody": {
          "description": " Possible properties include: containerId, userId, date, type, action, modifier, level, source",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/AuditLogQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AuditLog/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for an AuditLog query.",
        "operationId": "QueryMoreAuditLog",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLogQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/AuditLog/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves an instance of an AuditLog object.",
        "operationId": "GetAuditLog",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuditLog"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Branch": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a Branch object.",
        "operationId": "CreateBranch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Branch/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple Branch objects by identifier.",
        "operationId": "BulkBranch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BranchBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BranchBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Branch/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a Branch object(s).",
        "operationId": "QueryBranch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BranchQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BranchQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Branch/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a Branch query.",
        "operationId": "QueryMoreBranch",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BranchQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Branch/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a Branch object.",
        "operationId": "GetBranch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a Branch object.",
        "operationId": "UpdateBranch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a Branch object.",
        "operationId": "DeleteBranch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/BranchMergeRequest": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a BranchMergeRequest object.",
        "operationId": "CreateBranchMergeRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BranchMergeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/BranchMergeRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BranchMergeRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchMergeRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ChangeListenerStatus": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeListenerStatusRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ChangeListenerStatusRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ClearQueue/execute/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Executes an action on a ClearQueue object.",
        "operationId": "ExecuteClearQueue",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClearQueueRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ClearQueueRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ClearQueueRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearQueueRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Cloud/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple Cloud objects by identifier.",
        "operationId": "BulkCloud",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CloudBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Cloud/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Queries for a Cloud object(s).",
        "operationId": "QueryCloud",
        "requestBody": {
          "description": " Possible properties include: name, id",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloudQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CloudQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Cloud/queryMore": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves additional results for a Cloud query.",
        "operationId": "QueryMoreCloud",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CloudQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CloudQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Cloud/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of a Cloud object.",
        "operationId": "GetCloud",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Cloud"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Cloud"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Component": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a Component object.",
        "operationId": "CreateComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Component/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple Component objects by identifier.",
        "operationId": "BulkComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Component/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a Component object.",
        "operationId": "GetComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a Component object.",
        "operationId": "UpdateComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Component"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Component"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentAtomAttachment": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a ComponentAtomAttachment object.",
        "operationId": "CreateComponentAtomAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentAtomAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentAtomAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentAtomAttachment/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a ComponentAtomAttachment object(s).",
        "operationId": "QueryComponentAtomAttachment",
        "requestBody": {
          "description": " Possible properties include: atomId, componentId, componentType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentAtomAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentAtomAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentAtomAttachment/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a ComponentAtomAttachment query.",
        "operationId": "QueryMoreComponentAtomAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentAtomAttachment/{id}": {
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a ComponentAtomAttachment object.",
        "operationId": "DeleteComponentAtomAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentDiffRequest": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a ComponentDiffRequest object.",
        "operationId": "CreateComponentDiffRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDiffRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDiffRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentDiffRequest/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple ComponentDiffRequest objects by identifier.",
        "operationId": "BulkComponentDiffRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDiffRequestBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentDiffRequestBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequestBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequestBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentDiffRequest/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a ComponentDiffRequest object.",
        "operationId": "GetComponentDiffRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentDiffRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentEnvironmentAttachment": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a ComponentEnvironmentAttachment object.",
        "operationId": "CreateComponentEnvironmentAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentEnvironmentAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentEnvironmentAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentEnvironmentAttachment/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a ComponentEnvironmentAttachment object(s).",
        "operationId": "QueryComponentEnvironmentAttachment",
        "requestBody": {
          "description": " Possible properties include: environmentId, componentId, componentType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentEnvironmentAttachment/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a ComponentEnvironmentAttachment query.",
        "operationId": "QueryMoreComponentEnvironmentAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentEnvironmentAttachment/{id}": {
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a ComponentEnvironmentAttachment object.",
        "operationId": "DeleteComponentEnvironmentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentMetadata": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a ComponentMetadata object.",
        "operationId": "CreateComponentMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadata"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentMetadata/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple ComponentMetadata objects by identifier.",
        "operationId": "BulkComponentMetadata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadataBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadataBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentMetadata/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a ComponentMetadata object(s).",
        "operationId": "QueryComponentMetadata",
        "requestBody": {
          "description": " Possible properties include: accountId, componentId, version, name, type, subType, createdDate, createdBy, modifiedDate, modifiedBy, deleted, currentVersion, folderName, folderId, copiedFromComponentId, copiedFromComponentVersion, branchName, branchId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadataQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadataQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentMetadata/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a ComponentMetadata query.",
        "operationId": "QueryMoreComponentMetadata",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadataQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentMetadata/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a ComponentMetadata object.",
        "operationId": "GetComponentMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a ComponentMetadata object.",
        "operationId": "UpdateComponentMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadata"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentMetadata"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a ComponentMetadata object.",
        "operationId": "DeleteComponentMetadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentReference/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple ComponentReference objects by identifier.",
        "operationId": "BulkComponentReference",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentReferenceBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentReferenceBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentReference/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a ComponentReference object(s).",
        "operationId": "QueryComponentReference",
        "requestBody": {
          "description": " Possible properties include: parentComponentId, parentVersion, componentId, type",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComponentReferenceQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ComponentReferenceQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentReference/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a ComponentReference query.",
        "operationId": "QueryMoreComponentReference",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReferenceQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ComponentReference/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a ComponentReference object.",
        "operationId": "GetComponentReference",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReference"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComponentReference"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ConnectionLicensingReport": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates a ConnectionLicensingReport object.",
        "operationId": "CreateConnectionLicensingReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionLicensingReport"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectionLicensingReport"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionLicensingReport"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectionLicensingReport"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Connector/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple Connector objects by identifier.",
        "operationId": "BulkConnector",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Connector/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a Connector object(s).",
        "operationId": "QueryConnector",
        "requestBody": {
          "description": " Possible properties include: type, name",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Connector/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a Connector query.",
        "operationId": "QueryMoreConnector",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Connector/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a Connector object.",
        "operationId": "GetConnector",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connector"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ConnectorDocument": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates a ConnectorDocument object.",
        "operationId": "CreateConnectorDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ConnectorDocument"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectorDocument"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/CustomTrackedField/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a CustomTrackedField object(s).",
        "operationId": "QueryCustomTrackedField",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomTrackedFieldQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/CustomTrackedFieldQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTrackedFieldQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTrackedFieldQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/CustomTrackedField/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a CustomTrackedField query.",
        "operationId": "QueryMoreCustomTrackedField",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTrackedFieldQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomTrackedFieldQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedExpiredCertificate/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Queries for a DeployedExpiredCertificate object(s).",
        "operationId": "QueryDeployedExpiredCertificate",
        "requestBody": {
          "description": " Possible properties include: containerId, containerName, environmentId, environmentName, expirationBoundary",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployedExpiredCertificateQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeployedExpiredCertificateQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedExpiredCertificateQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedExpiredCertificateQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedExpiredCertificate/queryMore": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves additional results for a DeployedExpiredCertificate query.",
        "operationId": "QueryMoreDeployedExpiredCertificate",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedExpiredCertificateQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedExpiredCertificateQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedPackage": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a DeployedPackage object.",
        "operationId": "CreateDeployedPackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackage"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackage"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackage"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedPackage/bulk": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves multiple DeployedPackage objects by identifier.",
        "operationId": "BulkDeployedPackage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackageBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackageBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedPackage/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a DeployedPackage object(s).",
        "operationId": "QueryDeployedPackage",
        "requestBody": {
          "description": " Possible properties include: uid, notes, current, packageNotes, active, componentId, componentVersion, componentName, componentType, deployedBy, deployedDate, deploymentId, environmentId, environmentName, packageId, packageVersion, version, accountId, branch",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackageQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeployedPackageQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedPackage/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a DeployedPackage query.",
        "operationId": "QueryMoreDeployedPackage",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackageQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DeployedPackage/{id}": {
      "get": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves an instance of a DeployedPackage object.",
        "operationId": "GetDeployedPackage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackage"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeployedPackage"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a DeployedPackage object.",
        "operationId": "DeleteDeployedPackage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Deployment": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a Deployment object.",
        "operationId": "CreateDeployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Deployment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Deployment/bulk": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves multiple Deployment objects by identifier.",
        "operationId": "BulkDeployment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Deployment/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a Deployment object(s).",
        "operationId": "QueryDeployment",
        "requestBody": {
          "description": " Possible properties include: environmentId, processId, componentId, componentType, current",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Deployment/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a Deployment query.",
        "operationId": "QueryMoreDeployment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeploymentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Deployment/{id}": {
      "get": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves an instance of a Deployment object.",
        "operationId": "GetDeployment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Deployment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DocumentCountAccount/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for a DocumentCountAccount object(s).",
        "operationId": "QueryDocumentCountAccount",
        "requestBody": {
          "description": " Possible properties include: environmentId, atomId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCountAccountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCountAccountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DocumentCountAccount/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for a DocumentCountAccount query.",
        "operationId": "QueryMoreDocumentCountAccount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DocumentCountAccountGroup/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for a DocumentCountAccountGroup object(s).",
        "operationId": "QueryDocumentCountAccountGroup",
        "requestBody": {
          "description": " Possible properties include: accountGroupId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCountAccountGroupQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCountAccountGroupQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/DocumentCountAccountGroup/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for a DocumentCountAccountGroup query.",
        "operationId": "QueryMoreDocumentCountAccountGroup",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentCountAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EDIFACTConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for an EDIFACTConnectorRecord object(s).",
        "operationId": "QueryEDIFACTConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EDIFACTConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for an EDIFACTConnectorRecord query.",
        "operationId": "QueryMoreEDIFACTConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EDIFACTConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EdiCustomConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for an EdiCustomConnectorRecord object(s).",
        "operationId": "QueryEdiCustomConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EdiCustomConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for an EdiCustomConnectorRecord query.",
        "operationId": "QueryMoreEdiCustomConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EdiCustomConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Environment": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Creates an Environment object.",
        "operationId": "CreateEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Environment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Environment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Environment/bulk": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves multiple Environment objects by identifier.",
        "operationId": "BulkEnvironment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Environment/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an Environment object(s).",
        "operationId": "QueryEnvironment",
        "requestBody": {
          "description": " Possible properties include: name, id, classification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Environment/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an Environment query.",
        "operationId": "QueryMoreEnvironment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Environment/{id}": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves an instance of an Environment object.",
        "operationId": "GetEnvironment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Modifies or updates an Environment object.",
        "operationId": "UpdateEnvironment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Environment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Environment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Environment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "environment"
        ],
        "summary": "Deletes an Environment object.",
        "operationId": "DeleteEnvironment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentAtomAttachment": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Creates an EnvironmentAtomAttachment object.",
        "operationId": "CreateEnvironmentAtomAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentAtomAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentAtomAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentAtomAttachment/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentAtomAttachment object(s).",
        "operationId": "QueryEnvironmentAtomAttachment",
        "requestBody": {
          "description": " Possible properties include: atomId, environmentId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentAtomAttachment/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentAtomAttachment query.",
        "operationId": "QueryMoreEnvironmentAtomAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentAtomAttachment/{id}": {
      "delete": {
        "tags": [
          "environment"
        ],
        "summary": "Deletes an EnvironmentAtomAttachment object.",
        "operationId": "DeleteEnvironmentAtomAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentConnectionFieldExtensionSummary/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentConnectionFieldExtensionSummary object(s).",
        "operationId": "QueryEnvironmentConnectionFieldExtensionSummary",
        "requestBody": {
          "description": " Possible properties include: environmentId, extensionGroupId, connectionId, fieldId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentConnectionFieldExtensionSummary/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentConnectionFieldExtensionSummary query.",
        "operationId": "QueryMoreEnvironmentConnectionFieldExtensionSummary",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentExtensions/bulk": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves multiple EnvironmentExtensions objects by identifier.",
        "operationId": "BulkEnvironmentExtensions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensionsBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensionsBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentExtensions/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentExtensions object(s).",
        "operationId": "QueryEnvironmentExtensions",
        "requestBody": {
          "description": " Possible properties include: environmentId, extensionGroupId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensionsQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensionsQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentExtensions/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentExtensions query.",
        "operationId": "QueryMoreEnvironmentExtensions",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensionsQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentExtensions/{id}": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves an instance of an EnvironmentExtensions object.",
        "operationId": "GetEnvironmentExtensions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensions"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensions"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Modifies or updates an EnvironmentExtensions object.",
        "operationId": "UpdateEnvironmentExtensions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensions"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentExtensions"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensions"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentExtensions"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtension/bulk": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves multiple EnvironmentMapExtension objects by identifier.",
        "operationId": "BulkEnvironmentMapExtension",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtension/execute/{id}": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Executes an action on an EnvironmentMapExtension object.",
        "operationId": "ExecuteEnvironmentMapExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtension"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtension"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtension/{id}": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves an instance of an EnvironmentMapExtension object.",
        "operationId": "GetEnvironmentMapExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Modifies or updates an EnvironmentMapExtension object.",
        "operationId": "UpdateEnvironmentMapExtension",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtension"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtension"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionExternalComponent/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentMapExtensionExternalComponent object(s).",
        "operationId": "QueryEnvironmentMapExtensionExternalComponent",
        "requestBody": {
          "description": " Possible properties include: ACCOUNT_ID, ENVIRONMENT_MAP_EXTENSION_ID, PACKAGED_COMPONENT_UID, COMPONENT_ID, COMPONENT_VERSION, COMPONENT_NAME, COMPONENT_TYPE",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionExternalComponent/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentMapExtensionExternalComponent query.",
        "operationId": "QueryMoreEnvironmentMapExtensionExternalComponent",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionUserDefinedFunction": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Creates an EnvironmentMapExtensionUserDefinedFunction object.",
        "operationId": "CreateEnvironmentMapExtensionUserDefinedFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionUserDefinedFunction/bulk": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves multiple EnvironmentMapExtensionUserDefinedFunction objects by identifier.",
        "operationId": "BulkEnvironmentMapExtensionUserDefinedFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionUserDefinedFunction/{id}": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves an instance of an EnvironmentMapExtensionUserDefinedFunction object.",
        "operationId": "GetEnvironmentMapExtensionUserDefinedFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Modifies or updates an EnvironmentMapExtensionUserDefinedFunction object.",
        "operationId": "UpdateEnvironmentMapExtensionUserDefinedFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "environment"
        ],
        "summary": "Deletes an EnvironmentMapExtensionUserDefinedFunction object.",
        "operationId": "DeleteEnvironmentMapExtensionUserDefinedFunction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionUserDefinedFunctionSummary/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentMapExtensionUserDefinedFunctionSummary object(s).",
        "operationId": "QueryEnvironmentMapExtensionUserDefinedFunctionSummary",
        "requestBody": {
          "description": " Possible properties include: environmentId, extensionGroupId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionUserDefinedFunctionSummary/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentMapExtensionUserDefinedFunctionSummary query.",
        "operationId": "QueryMoreEnvironmentMapExtensionUserDefinedFunctionSummary",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionsSummary/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentMapExtensionsSummary object(s).",
        "operationId": "QueryEnvironmentMapExtensionsSummary",
        "requestBody": {
          "description": " Possible properties include: environmentId, extensionGroupId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentMapExtensionsSummary/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentMapExtensionsSummary query.",
        "operationId": "QueryMoreEnvironmentMapExtensionsSummary",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentRole": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Creates an EnvironmentRole object.",
        "operationId": "CreateEnvironmentRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRole"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRole"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRole"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentRole/bulk": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves multiple EnvironmentRole objects by identifier.",
        "operationId": "BulkEnvironmentRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRoleBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRoleBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentRole/query": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Queries for an EnvironmentRole object(s).",
        "operationId": "QueryEnvironmentRole",
        "requestBody": {
          "description": " Possible properties include: environmentId, roleId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRoleQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EnvironmentRoleQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentRole/queryMore": {
      "post": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves additional results for an EnvironmentRole query.",
        "operationId": "QueryMoreEnvironmentRole",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/EnvironmentRole/{id}": {
      "get": {
        "tags": [
          "environment"
        ],
        "summary": "Retrieves an instance of an EnvironmentRole object.",
        "operationId": "GetEnvironmentRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRole"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentRole"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "environment"
        ],
        "summary": "Deletes an EnvironmentRole object.",
        "operationId": "DeleteEnvironmentRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Event/query": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Queries for an Event object(s).",
        "operationId": "QueryEvent",
        "requestBody": {
          "description": " Possible properties include: eventId, accountId, atomId, atomName, eventLevel, eventDate, status, eventType, executionId, title, updateDate, startTime, endTime, errorDocumentCount, inboundDocumentCount, outboundDocumentCount, processName, recordDate, error, environment, classification",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/EventQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EventQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Event/queryMore": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Retrieves additional results for an Event query.",
        "operationId": "QueryMoreEvent",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/EventQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionArtifacts": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates an ExecutionArtifacts object.",
        "operationId": "CreateExecutionArtifacts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionArtifacts"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionArtifacts"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionArtifacts"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionArtifacts"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionConnector/query": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Queries for an ExecutionConnector object(s).",
        "operationId": "QueryExecutionConnector",
        "requestBody": {
          "description": " Possible properties include: executionId, connectorType, actionType, errorCount, successCount, size, isStartShape, recordType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionConnectorQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionConnectorQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionConnectorQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionConnectorQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionConnector/queryMore": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Retrieves additional results for an ExecutionConnector query.",
        "operationId": "QueryMoreExecutionConnector",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionConnectorQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionConnectorQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionCountAccount/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for an ExecutionCountAccount object(s).",
        "operationId": "QueryExecutionCountAccount",
        "requestBody": {
          "description": " Possible properties include: environmentId, atomId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCountAccountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCountAccountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionCountAccount/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for an ExecutionCountAccount query.",
        "operationId": "QueryMoreExecutionCountAccount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionCountAccountGroup/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for an ExecutionCountAccountGroup object(s).",
        "operationId": "QueryExecutionCountAccountGroup",
        "requestBody": {
          "description": " Possible properties include: accountGroupId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionCountAccountGroup/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for an ExecutionCountAccountGroup query.",
        "operationId": "QueryMoreExecutionCountAccountGroup",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionCountAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionRecord/query": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Queries for an ExecutionRecord object(s).",
        "operationId": "QueryExecutionRecord",
        "requestBody": {
          "description": " Possible properties include: executionId, originalExecutionId, account, executionTime, status, executionType, processName, processId, atomName, atomId, inboundDocumentCount, outboundDocumentCount, executionDuration, message, reportKey, launcherId, nodeId, recordedDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionRecord/queryMore": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Retrieves additional results for an ExecutionRecord query.",
        "operationId": "QueryMoreExecutionRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionRequest": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates an ExecutionRequest object.",
        "operationId": "CreateExecutionRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionSummaryRecord/query": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Queries for an ExecutionSummaryRecord object(s).",
        "operationId": "QueryExecutionSummaryRecord",
        "requestBody": {
          "description": " Possible properties include: processId, timeBlock, atomId, status, reportKey, launcherId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionSummaryRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExecutionSummaryRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionSummaryRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionSummaryRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ExecutionSummaryRecord/queryMore": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Retrieves additional results for an ExecutionSummaryRecord query.",
        "operationId": "QueryMoreExecutionSummaryRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionSummaryRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExecutionSummaryRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Folder": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a Folder object.",
        "operationId": "CreateFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Folder"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Folder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Folder/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple Folder objects by identifier.",
        "operationId": "BulkFolder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/FolderBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FolderBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Folder/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a Folder object(s).",
        "operationId": "QueryFolder",
        "requestBody": {
          "description": " Possible properties include: accountId, id, name, fullPath, deleted, parentId, parentName, permittedRoles",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FolderQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/FolderQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FolderQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Folder/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a Folder query.",
        "operationId": "QueryMoreFolder",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FolderQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Folder/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a Folder object.",
        "operationId": "GetFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a Folder object.",
        "operationId": "UpdateFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Folder"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Folder"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Folder"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a Folder object.",
        "operationId": "DeleteFolder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/GenericConnectorRecord/bulk": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves multiple GenericConnectorRecord objects by identifier.",
        "operationId": "BulkGenericConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericConnectorRecordBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenericConnectorRecordBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/GenericConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a GenericConnectorRecord object(s).",
        "operationId": "QueryGenericConnectorRecord",
        "requestBody": {
          "description": " Possible properties include: id, executionConnectorId, executionId, connectionId, operationId, actionType, connectorType, atomId, dateProcessed, connectionName, operationName, errorMessage, status, documentIndex, incrementalDocumentIndex, size, startShape, retryable",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/GenericConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/GenericConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a GenericConnectorRecord query.",
        "operationId": "QueryMoreGenericConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/GenericConnectorRecord/{id}": {
      "get": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves an instance of a GenericConnectorRecord object.",
        "operationId": "GetGenericConnectorRecord",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecord"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericConnectorRecord"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/GetAssignableRoles": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "",
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Roles"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/HL7ConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a HL7ConnectorRecord object(s).",
        "operationId": "QueryHL7ConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HL7ConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/HL7ConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HL7ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HL7ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/HL7ConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a HL7ConnectorRecord query.",
        "operationId": "QueryMoreHL7ConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/HL7ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HL7ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/InstallerToken": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates an InstallerToken object.",
        "operationId": "CreateInstallerToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallerToken"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/InstallerToken"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InstallerToken"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InstallerToken"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPack/bulk": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves multiple IntegrationPack objects by identifier.",
        "operationId": "BulkIntegrationPack",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPack/query": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Queries for an IntegrationPack object(s).",
        "operationId": "QueryIntegrationPack",
        "requestBody": {
          "description": " Possible properties include: name, id, installationType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPack/queryMore": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves additional results for an IntegrationPack query.",
        "operationId": "QueryMoreIntegrationPack",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPack/{id}": {
      "get": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves an instance of an IntegrationPack object.",
        "operationId": "GetIntegrationPack",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPack"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPack"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackAtomAttachment": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Creates an IntegrationPackAtomAttachment object.",
        "operationId": "CreateIntegrationPackAtomAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackAtomAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackAtomAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackAtomAttachment/query": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Queries for an IntegrationPackAtomAttachment object(s).",
        "operationId": "QueryIntegrationPackAtomAttachment",
        "requestBody": {
          "description": " Possible properties include: atomId, integrationPackInstanceId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackAtomAttachment/queryMore": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves additional results for an IntegrationPackAtomAttachment query.",
        "operationId": "QueryMoreIntegrationPackAtomAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackAtomAttachment/{id}": {
      "delete": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Deletes an IntegrationPackAtomAttachment object.",
        "operationId": "DeleteIntegrationPackAtomAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackEnvironmentAttachment": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Creates an IntegrationPackEnvironmentAttachment object.",
        "operationId": "CreateIntegrationPackEnvironmentAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackEnvironmentAttachment/query": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Queries for an IntegrationPackEnvironmentAttachment object(s).",
        "operationId": "QueryIntegrationPackEnvironmentAttachment",
        "requestBody": {
          "description": " Possible properties include: environmentId, integrationPackInstanceId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackEnvironmentAttachment/queryMore": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves additional results for an IntegrationPackEnvironmentAttachment query.",
        "operationId": "QueryMoreIntegrationPackEnvironmentAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackEnvironmentAttachment/{id}": {
      "delete": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Deletes an IntegrationPackEnvironmentAttachment object.",
        "operationId": "DeleteIntegrationPackEnvironmentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackInstance": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Creates an IntegrationPackInstance object.",
        "operationId": "CreateIntegrationPackInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstance"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstance"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstance"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackInstance/bulk": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves multiple IntegrationPackInstance objects by identifier.",
        "operationId": "BulkIntegrationPackInstance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstanceBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstanceBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackInstance/query": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Queries for an IntegrationPackInstance object(s).",
        "operationId": "QueryIntegrationPackInstance",
        "requestBody": {
          "description": " Possible properties include: integrationPackOverrideName, integrationPackName, integrationPackId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstanceQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/IntegrationPackInstanceQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackInstance/queryMore": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves additional results for an IntegrationPackInstance query.",
        "operationId": "QueryMoreIntegrationPackInstance",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstanceQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/IntegrationPackInstance/{id}": {
      "get": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves an instance of an IntegrationPackInstance object.",
        "operationId": "GetIntegrationPackInstance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstance"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationPackInstance"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Deletes an IntegrationPackInstance object.",
        "operationId": "DeleteIntegrationPackInstance",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/JavaRollback/execute/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Executes an action on a JavaRollback object.",
        "operationId": "ExecuteJavaRollback",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JavaRollback"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/JavaRollback"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JavaRollback"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JavaRollback"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/JavaUpgrade": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates a JavaUpgrade object.",
        "operationId": "CreateJavaUpgrade",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JavaUpgrade"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/JavaUpgrade"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/JavaUpgrade"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JavaUpgrade"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/MergeRequest": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a MergeRequest object.",
        "operationId": "CreateMergeRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/MergeRequest/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple MergeRequest objects by identifier.",
        "operationId": "BulkMergeRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequestBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequestBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequestBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequestBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/MergeRequest/execute/{id}": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Executes an action on a MergeRequest object.",
        "operationId": "ExecuteMergeRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/MergeRequest/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a MergeRequest object.",
        "operationId": "GetMergeRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a MergeRequest object.",
        "operationId": "UpdateMergeRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MergeRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MergeRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a MergeRequest object.",
        "operationId": "DeleteMergeRequest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/MoveQueueRequest": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates a MoveQueueRequest object.",
        "operationId": "CreateMoveQueueRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoveQueueRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/MoveQueueRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/MoveQueueRequest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoveQueueRequest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/NodeOffboard": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Creates a NodeOffboard object.",
        "operationId": "CreateNodeOffboard",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NodeOffboard"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/NodeOffboard"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NodeOffboard"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeOffboard"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/OFTP2ConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for an OFTP2ConnectorRecord object(s).",
        "operationId": "QueryOFTP2ConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/OFTP2ConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for an OFTP2ConnectorRecord query.",
        "operationId": "QueryMoreOFTP2ConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OFTP2ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponent": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a PackagedComponent object.",
        "operationId": "CreatePackagedComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponent"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponent/bulk": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves multiple PackagedComponent objects by identifier.",
        "operationId": "BulkPackagedComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponent/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a PackagedComponent object(s).",
        "operationId": "QueryPackagedComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponent/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a PackagedComponent query.",
        "operationId": "QueryMorePackagedComponent",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponent/{id}": {
      "get": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves an instance of a PackagedComponent object.",
        "operationId": "GetPackagedComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a PackagedComponent object.",
        "operationId": "DeletePackagedComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponentManifest/bulk": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves multiple PackagedComponentManifest objects by identifier.",
        "operationId": "BulkPackagedComponentManifest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentManifestBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PackagedComponentManifestBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentManifestBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentManifestBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PackagedComponentManifest/{id}": {
      "get": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves an instance of a PackagedComponentManifest object.",
        "operationId": "GetPackagedComponentManifest",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentManifest"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagedComponentManifest"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/PersistedProcessProperties/{id}": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates a PersistedProcessProperties object.",
        "operationId": "UpdatePersistedProcessProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersistedProcessProperties"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PersistedProcessProperties"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PersistedProcessProperties"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersistedProcessProperties"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Process/bulk": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves multiple Process objects by identifier.",
        "operationId": "BulkProcess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Process/query": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Queries for a Process object(s).",
        "operationId": "QueryProcess",
        "requestBody": {
          "description": " Possible properties include: name, id, integrationPackId, integrationPackInstanceId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Process/queryMore": {
      "post": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves additional results for a Process query.",
        "operationId": "QueryMoreProcess",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Process/{id}": {
      "get": {
        "tags": [
          "integrationpack"
        ],
        "summary": "Retrieves an instance of a Process object.",
        "operationId": "GetProcess",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Process"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessAtomAttachment": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a ProcessAtomAttachment object.",
        "operationId": "CreateProcessAtomAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAtomAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAtomAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessAtomAttachment/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a ProcessAtomAttachment object(s).",
        "operationId": "QueryProcessAtomAttachment",
        "requestBody": {
          "description": " Possible properties include: atomId, processId, componentType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAtomAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessAtomAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessAtomAttachment/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a ProcessAtomAttachment query.",
        "operationId": "QueryMoreProcessAtomAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessAtomAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessAtomAttachment/{id}": {
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a ProcessAtomAttachment object.",
        "operationId": "DeleteProcessAtomAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessEnvironmentAttachment": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Creates a ProcessEnvironmentAttachment object.",
        "operationId": "CreateProcessEnvironmentAttachment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEnvironmentAttachment"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEnvironmentAttachment"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachment"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessEnvironmentAttachment/query": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Queries for a ProcessEnvironmentAttachment object(s).",
        "operationId": "QueryProcessEnvironmentAttachment",
        "requestBody": {
          "description": " Possible properties include: environmentId, processId, componentType",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessEnvironmentAttachment/queryMore": {
      "post": {
        "tags": [
          "deployment"
        ],
        "summary": "Retrieves additional results for a ProcessEnvironmentAttachment query.",
        "operationId": "QueryMoreProcessEnvironmentAttachment",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessEnvironmentAttachmentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessEnvironmentAttachment/{id}": {
      "delete": {
        "tags": [
          "deployment"
        ],
        "summary": "Deletes a ProcessEnvironmentAttachment object.",
        "operationId": "DeleteProcessEnvironmentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessLog": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates a ProcessLog object.",
        "operationId": "CreateProcessLog",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessLog"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessLog"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessLog"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessLog"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessScheduleStatus/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple ProcessScheduleStatus objects by identifier.",
        "operationId": "BulkProcessScheduleStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatusBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatusBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessScheduleStatus/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Queries for a ProcessScheduleStatus object(s).",
        "operationId": "QueryProcessScheduleStatus",
        "requestBody": {
          "description": " Possible properties include: processId, atomId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatusQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatusQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessScheduleStatus/queryMore": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves additional results for a ProcessScheduleStatus query.",
        "operationId": "QueryMoreProcessScheduleStatus",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatusQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessScheduleStatus/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of a ProcessScheduleStatus object.",
        "operationId": "GetProcessScheduleStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatus"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates a ProcessScheduleStatus object.",
        "operationId": "UpdateProcessScheduleStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatus"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessScheduleStatus"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessScheduleStatus"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessSchedules/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple ProcessSchedules objects by identifier.",
        "operationId": "BulkProcessSchedules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedulesBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedulesBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessSchedules/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Queries for a ProcessSchedules object(s).",
        "operationId": "QueryProcessSchedules",
        "requestBody": {
          "description": " Possible properties include: processId, atomId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedulesQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedulesQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessSchedules/queryMore": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves additional results for a ProcessSchedules query.",
        "operationId": "QueryMoreProcessSchedules",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedulesQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ProcessSchedules/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of a ProcessSchedules object.",
        "operationId": "GetProcessSchedules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedules"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedules"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates a ProcessSchedules object.",
        "operationId": "UpdateProcessSchedules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedules"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProcessSchedules"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedules"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessSchedules"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/RerunDocument": {
      "post": {
        "tags": [
          "execution"
        ],
        "summary": "Creates a RerunDocument object.",
        "operationId": "CreateRerunDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RerunDocument"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RerunDocument"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RerunDocument"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RerunDocument"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Role": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Creates a Role object.",
        "operationId": "CreateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Role/bulk": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves multiple Role objects by identifier.",
        "operationId": "BulkRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Role/query": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Queries for a Role object(s).",
        "operationId": "QueryRole",
        "requestBody": {
          "description": " Possible properties include: name, parentId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RoleQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RoleQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Role/queryMore": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves additional results for a Role query.",
        "operationId": "QueryMoreRole",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RoleQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/Role/{id}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Retrieves an instance of a Role object.",
        "operationId": "GetRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Modifies or updates a Role object.",
        "operationId": "UpdateRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Role"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Role"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes a Role object.",
        "operationId": "DeleteRole",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/RosettaNetConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a RosettaNetConnectorRecord object(s).",
        "operationId": "QueryRosettaNetConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/RosettaNetConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a RosettaNetConnectorRecord query.",
        "operationId": "QueryMoreRosettaNetConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RosettaNetConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/SharedServerInformation/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple SharedServerInformation objects by identifier.",
        "operationId": "BulkSharedServerInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedServerInformationBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SharedServerInformationBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformationBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformationBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/SharedServerInformation/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of a SharedServerInformation object.",
        "operationId": "GetSharedServerInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformation"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates a SharedServerInformation object.",
        "operationId": "UpdateSharedServerInformation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedServerInformation"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SharedServerInformation"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformation"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedServerInformation"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/SharedWebServer/bulk": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves multiple SharedWebServer objects by identifier.",
        "operationId": "BulkSharedWebServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedWebServerBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SharedWebServerBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServerBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServerBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/SharedWebServer/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an instance of a SharedWebServer object.",
        "operationId": "GetSharedWebServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServer"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Modifies or updates a SharedWebServer object.",
        "operationId": "UpdateSharedWebServer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SharedWebServer"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SharedWebServer"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServer"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SharedWebServer"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ThroughputAccount/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for a ThroughputAccount object(s).",
        "operationId": "QueryThroughputAccount",
        "requestBody": {
          "description": " Possible properties include: environmentId, atomId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThroughputAccountQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ThroughputAccountQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ThroughputAccount/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for a ThroughputAccount query.",
        "operationId": "QueryMoreThroughputAccount",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ThroughputAccountGroup/query": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Queries for a ThroughputAccountGroup object(s).",
        "operationId": "QueryThroughputAccountGroup",
        "requestBody": {
          "description": " Possible properties include: accountGroupId, processDate",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThroughputAccountGroupQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ThroughputAccountGroupQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ThroughputAccountGroup/queryMore": {
      "post": {
        "tags": [
          "executionStatistic"
        ],
        "summary": "Retrieves additional results for a ThroughputAccountGroup query.",
        "operationId": "QueryMoreThroughputAccountGroup",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThroughputAccountGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradacomsConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a TradacomsConnectorRecord object(s).",
        "operationId": "QueryTradacomsConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradacomsConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradacomsConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradacomsConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradacomsConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradacomsConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a TradacomsConnectorRecord query.",
        "operationId": "QueryMoreTradacomsConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradacomsConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradacomsConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerComponent": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a TradingPartnerComponent object.",
        "operationId": "CreateTradingPartnerComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponent"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerComponent/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple TradingPartnerComponent objects by identifier.",
        "operationId": "BulkTradingPartnerComponent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponentBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponentBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerComponent/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a TradingPartnerComponent object(s).",
        "operationId": "QueryTradingPartnerComponent",
        "requestBody": {
          "description": " Possible properties include: name, classification, standard, identifier, as2, disk, ftp, mllp, sftp, http, oftp",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponentQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponentQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerComponent/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a TradingPartnerComponent query.",
        "operationId": "QueryMoreTradingPartnerComponent",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponentQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerComponent/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a TradingPartnerComponent object.",
        "operationId": "GetTradingPartnerComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a TradingPartnerComponent object.",
        "operationId": "UpdateTradingPartnerComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponent"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerComponent"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a TradingPartnerComponent object.",
        "operationId": "DeleteTradingPartnerComponent",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerProcessingGroup": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Creates a TradingPartnerProcessingGroup object.",
        "operationId": "CreateTradingPartnerProcessingGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerProcessingGroup/bulk": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves multiple TradingPartnerProcessingGroup objects by identifier.",
        "operationId": "BulkTradingPartnerProcessingGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroupBulkRequest"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroupBulkRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupBulkResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupBulkResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerProcessingGroup/query": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Queries for a TradingPartnerProcessingGroup object(s).",
        "operationId": "QueryTradingPartnerProcessingGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerProcessingGroup/queryMore": {
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves additional results for a TradingPartnerProcessingGroup query.",
        "operationId": "QueryMoreTradingPartnerProcessingGroup",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroupQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/TradingPartnerProcessingGroup/{id}": {
      "get": {
        "tags": [
          "component"
        ],
        "summary": "Retrieves an instance of a TradingPartnerProcessingGroup object.",
        "operationId": "GetTradingPartnerProcessingGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "component"
        ],
        "summary": "Modifies or updates a TradingPartnerProcessingGroup object.",
        "operationId": "UpdateTradingPartnerProcessingGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "component"
        ],
        "summary": "Deletes a TradingPartnerProcessingGroup object.",
        "operationId": "DeleteTradingPartnerProcessingGroup",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/X12ConnectorRecord/query": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Queries for a X12ConnectorRecord object(s).",
        "operationId": "QueryX12ConnectorRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/X12ConnectorRecordQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/X12ConnectorRecordQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/X12ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/X12ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/X12ConnectorRecord/queryMore": {
      "post": {
        "tags": [
          "documentTracking"
        ],
        "summary": "Retrieves additional results for a X12ConnectorRecord query.",
        "operationId": "QueryMoreX12ConnectorRecord",
        "requestBody": {
          "content": {
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/X12ConnectorRecordQueryResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/X12ConnectorRecordQueryResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AccountCloudAttachmentProperties/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AccountCloudAttachmentProperties object by identifier.",
        "operationId": "AsyncTokenAccountCloudAttachmentProperties",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentPropertiesAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentPropertiesAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AccountCloudAttachmentProperties/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AccountCloudAttachmentProperties object by identifier.",
        "operationId": "AsyncGetAccountCloudAttachmentProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomCounters/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomCounters object by identifier.",
        "operationId": "AsyncTokenAtomCounters",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomCountersAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomCountersAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomCounters/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomCounters object by identifier.",
        "operationId": "AsyncGetAtomCounters",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomDiskSpace/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomDiskSpace object by identifier.",
        "operationId": "AsyncTokenAtomDiskSpace",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomDiskSpaceAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomDiskSpaceAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomDiskSpace/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomDiskSpace object by identifier.",
        "operationId": "AsyncGetAtomDiskSpace",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomSecurityPolicies/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomSecurityPolicies object by identifier.",
        "operationId": "AsyncTokenAtomSecurityPolicies",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AtomSecurityPoliciesAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AtomSecurityPoliciesAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/AtomSecurityPolicies/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves an AtomSecurityPolicies object by identifier.",
        "operationId": "AsyncGetAtomSecurityPolicies",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/ListQueues/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a ListQueues object by identifier.",
        "operationId": "AsyncTokenListQueues",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListQueuesAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListQueuesAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/ListQueues/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a ListQueues object by identifier.",
        "operationId": "AsyncGetListQueues",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/ListenerStatus/query": {
      "post": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a ListenerStatus object by identifier.",
        "operationId": "AsyncGetListenerStatus",
        "requestBody": {
          "description": " Possible properties include: listenerId, containerId",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListenerStatusQueryConfig"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ListenerStatusQueryConfig"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/ListenerStatus/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a ListenerStatus object by identifier.",
        "operationId": "AsyncTokenListenerStatus",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListenerStatusAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ListenerStatusAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/PersistedProcessProperties/response/{token}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a PersistedProcessProperties object by identifier.",
        "operationId": "AsyncTokenPersistedProcessProperties",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Takes in the token from a previous call to return a result.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersistedProcessPropertiesAsyncResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PersistedProcessPropertiesAsyncResponse"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/async/PersistedProcessProperties/{id}": {
      "get": {
        "tags": [
          "atom"
        ],
        "summary": "Retrieves a PersistedProcessProperties object by identifier.",
        "operationId": "AsyncGetPersistedProcessProperties",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request and response.",
            "headers": {
              "Sunset": {
                "$ref": "#/components/headers/Sunset"
              },
              "Warning": {
                "$ref": "#/components/headers/Warning"
              },
              "Deprecation": {
                "$ref": "#/components/headers/Deprecation"
              },
              "Link": {
                "$ref": "#/components/headers/Link"
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncOperationTokenResult"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "410": {
            "$ref": "#/components/responses/410"
          },
          "503": {
            "$ref": "#/components/responses/503"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AS2BasicAuthInfo": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "user": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AS2CommunicationOptions": {
        "type": "object",
        "properties": {
          "AS2DefaultPartnerSettings": {
            "type": "object"
          },
          "AS2ReceiveOptions": {
            "type": "object"
          },
          "AS2SendOptions": {
            "type": "object"
          },
          "AS2SendSettings": {
            "type": "object"
          },
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "AS2ConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "ackStatus": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "as2FromId": {
            "type": "string"
          },
          "as2ToId": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "contentLength": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "mdnMessage": {
            "type": "string"
          },
          "messageId": {
            "type": "string"
          },
          "mimetype": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string"
          },
          "successful": {
            "type": "boolean"
          }
        }
      },
      "AS2ConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AS2ConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AS2ConnectorRecordGroupingExpression"
          }
        ]
      },
      "AS2ConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AS2ConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AS2ConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AS2ConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AS2ConnectorRecord"
            }
          }
        }
      },
      "AS2ConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AS2MDNOptions": {
        "required": [
          "externalURL",
          "mdnClientSSLCert",
          "mdnSSLCert"
        ],
        "type": "object",
        "properties": {
          "externalURL": {
            "type": "string"
          },
          "mdnClientSSLCert": {
            "type": "object"
          },
          "mdnDigestAlg": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SHA1",
              "SHA224",
              "SHA256",
              "SHA384",
              "SHA512"
            ]
          },
          "mdnSSLCert": {
            "type": "object"
          },
          "requestMDN": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "signed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "synchronous": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "sync",
              "async"
            ]
          },
          "useExternalURL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useSSL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AS2MessageOptions": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "attachmentCache": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "attachmentOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "BATCH",
              "DOCUMENT_CACHE"
            ]
          },
          "compressed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "dataContentType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "textplain",
              "binary",
              "edifact",
              "edix12",
              "applicationxml",
              "textxml"
            ]
          },
          "encrypted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "encryptionAlgorithm": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "na",
              "tripledes",
              "des",
              "rc2-128",
              "rc2-64",
              "rc2-40",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "maxDocumentCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "multipleAttachments": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "signed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "signingDigestAlg": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SHA1",
              "SHA224",
              "SHA256",
              "SHA384",
              "SHA512"
            ]
          },
          "subject": {
            "type": "string"
          }
        }
      },
      "AS2MyCompanyInfo": {
        "required": [
          "as2Id",
          "encryptionPrivateCertificate",
          "mdnSignaturePrivateCertificate",
          "signingPrivateCertificate"
        ],
        "type": "object",
        "properties": {
          "as2Id": {
            "type": "string"
          },
          "enabledLegacySMIME": {
            "type": "boolean"
          },
          "encryptionPrivateCertificate": {
            "type": "object"
          },
          "mdnSignaturePrivateCertificate": {
            "type": "object"
          },
          "signingPrivateCertificate": {
            "type": "object"
          }
        }
      },
      "AS2PartnerInfo": {
        "required": [
          "as2Id",
          "clientSSLCertificate",
          "encryptionPublicCertificate",
          "mdnSignaturePublicCertificate",
          "signingPublicCertificate"
        ],
        "type": "object",
        "properties": {
          "ListenAttachmentSettings": {
            "type": "object"
          },
          "ListenAuthSettings": {
            "type": "object"
          },
          "as2Id": {
            "type": "string"
          },
          "basicAuthEnabled": {
            "type": "boolean",
            "default": false
          },
          "clientSSLCertificate": {
            "type": "object"
          },
          "enabledLegacySMIME": {
            "type": "boolean"
          },
          "encryptionPublicCertificate": {
            "type": "object"
          },
          "mdnSignaturePublicCertificate": {
            "type": "object"
          },
          "messagesToCheckForDuplicates": {
            "type": "integer",
            "format": "int32"
          },
          "rejectDuplicateMessages": {
            "type": "boolean"
          },
          "signingPublicCertificate": {
            "type": "object"
          }
        }
      },
      "AS2ReceiveOptions": {
        "required": [
          "AS2DefaultPartnerInfo",
          "AS2DefaultPartnerMDNOptions",
          "AS2DefaultPartnerMessageOptions",
          "AS2MyCompanyInfo"
        ],
        "type": "object",
        "properties": {
          "AS2DefaultPartnerInfo": {
            "type": "object"
          },
          "AS2DefaultPartnerMDNOptions": {
            "type": "object"
          },
          "AS2DefaultPartnerMessageOptions": {
            "type": "object"
          },
          "AS2MyCompanyInfo": {
            "type": "object"
          }
        }
      },
      "AS2SendOptions": {
        "required": [
          "AS2MDNOptions",
          "AS2MessageOptions"
        ],
        "type": "object",
        "properties": {
          "AS2MDNOptions": {
            "type": "object"
          },
          "AS2MessageOptions": {
            "type": "object"
          },
          "AS2PartnerInfo": {
            "type": "object"
          }
        }
      },
      "AS2SendSettings": {
        "required": [
          "clientSSLCertificate",
          "sslCertificate",
          "url"
        ],
        "type": "object",
        "properties": {
          "AuthSettings": {
            "type": "object"
          },
          "authenticationType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "BASIC"
            ]
          },
          "clientSSLCertificate": {
            "type": "object"
          },
          "sslCertificate": {
            "type": "object"
          },
          "url": {
            "type": "string"
          },
          "useDefaultSettings": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "verifyHostname": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateCreated": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "expirationDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "licensing": {
            "type": "object"
          },
          "molecule": {
            "type": "object"
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "overDeployed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "trial",
              "active",
              "suspended",
              "deleted",
              "unlimited"
            ]
          },
          "suggestionsEnabled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "supportAccess": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "supportLevel": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "standard",
              "premier"
            ]
          },
          "widgetAccount": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AccountBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Account"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AccountCloudAttachmentProperties": {
        "type": "object",
        "properties": {
          "accountDiskUsage": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "as2Workload": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GENERAL",
              "LOW_LATENCY_DEBUG"
            ]
          },
          "atomInputSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "atomOutputOverflowSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "atomWorkingOverflowSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "cloudAccountExecutionLimit": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "cloudAccountExecutionWarningOffset": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "containerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "downloadRunnerlogs": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "enableAccountDataArchiving": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "enableAtomWorkerWarmup": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "flowControlParallelProcessTypeOverride": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "THREADS",
              "PROCESSES"
            ]
          },
          "httpRequestRate": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "httpWorkload": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GENERAL",
              "LOW_LATENCY_DEBUG",
              "LOW_LATENCY"
            ]
          },
          "listenerMaxConcurrentExecutions": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "maxConnectorTrackDocs": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "minNumberofAtomWorkers": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "numberofAtomWorkers": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queueIncomingMessageRateLimit": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "sessionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "statusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "testModeMaxDocBytes": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "testModeMaxDocs": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "workerElasticScalingThreshold": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "workerMaxExecutionTime": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "workerMaxGeneralExecutionTime": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "workerMaxQueuedExecutions": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "workerMaxRunningExecutions": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "workerQueuedExecutionTimeout": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountCloudAttachmentPropertiesAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCloudAttachmentProperties"
            }
          }
        }
      },
      "AccountCloudAttachmentQuota": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "maxAtomAttachment": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountCloudAttachmentQuotaBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AccountCloudAttachmentQuotaBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AccountCloudAttachmentQuota"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AccountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountGroupingExpression"
          }
        ]
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "autoSubscribeAlertLevel": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "none",
              "info",
              "warning",
              "error"
            ]
          },
          "defaultGroup": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountGroupAccount": {
        "type": "object",
        "properties": {
          "accountGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountGroupAccountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountGroupAccountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountGroupAccountGroupingExpression"
          }
        ]
      },
      "AccountGroupAccountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupAccountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountGroupAccountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountGroupAccountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupAccount"
            }
          }
        }
      },
      "AccountGroupAccountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountGroupId",
              "accountId"
            ]
          }
        }
      },
      "AccountGroupBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AccountGroupBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AccountGroup"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AccountGroupExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountGroupSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountGroupGroupingExpression"
          }
        ]
      },
      "AccountGroupGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountGroupQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountGroupQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroup"
            }
          }
        }
      },
      "AccountGroupSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "id",
              "accountId",
              "name",
              "defaultGroup",
              "autoSubscribeAlertLevel"
            ]
          }
        }
      },
      "AccountGroupUserRole": {
        "type": "object",
        "properties": {
          "accountGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "firstName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lastName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "notifyUser": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "roleId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountGroupUserRoleExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountGroupUserRoleSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountGroupUserRoleGroupingExpression"
          }
        ]
      },
      "AccountGroupUserRoleGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupUserRoleExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountGroupUserRoleQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountGroupUserRoleQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountGroupUserRole"
            }
          }
        }
      },
      "AccountGroupUserRoleSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountGroupId",
              "userId",
              "roleId"
            ]
          }
        }
      },
      "AccountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        }
      },
      "AccountSSOConfig": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "assertionEncryption": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "authnContext": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "authnContextComparison": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certInfo": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "enabled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "fedIdFromNameId": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "idpUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "nameIdPolicy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "signoutRedirectUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountSSOConfigBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AccountSSOConfigBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AccountSSOConfig"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AccountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ACCOUNTID",
              "DATECREATED",
              "EXPIRATIONDATE",
              "NAME",
              "STATUS",
              "WIDGETACCOUNT",
              "OVERDEPLOYED"
            ]
          }
        }
      },
      "AccountUserFederation": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "federationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountUserFederationExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountUserFederationSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountUserFederationGroupingExpression"
          }
        ]
      },
      "AccountUserFederationGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUserFederationExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountUserFederationQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountUserFederationQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUserFederation"
            }
          }
        }
      },
      "AccountUserFederationSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountId",
              "userId",
              "federationId"
            ]
          }
        }
      },
      "AccountUserRole": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "firstName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lastName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "notifyUser": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "roleId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AccountUserRoleExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AccountUserRoleSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AccountUserRoleGroupingExpression"
          }
        ]
      },
      "AccountUserRoleGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUserRoleExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AccountUserRoleQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AccountUserRoleQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUserRole"
            }
          }
        }
      },
      "AccountUserRoleSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountId",
              "userId",
              "roleId"
            ]
          }
        }
      },
      "AllDocuments": {
        "type": "object",
        "properties": {
          "documentStatus": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ANY",
              "SUCCESS",
              "ERROR"
            ]
          }
        }
      },
      "ApiUsageCount": {
        "type": "object",
        "properties": {
          "classification": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROD",
              "TEST"
            ]
          },
          "errorCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "processDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "successCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ApiUsageCountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ApiUsageCountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ApiUsageCountGroupingExpression"
          }
        ]
      },
      "ApiUsageCountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiUsageCountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ApiUsageCountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ApiUsageCountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiUsageCount"
            }
          }
        }
      },
      "ApiUsageCountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "processDate",
              "classification",
              "successCount",
              "errorCount"
            ]
          }
        }
      },
      "AsyncOperationTokenResult": {
        "required": [
          "asyncToken",
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "asyncToken": {
            "type": "object"
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AsyncToken": {
        "required": [
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Atom": {
        "type": "object",
        "properties": {
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GATEWAY",
                "BROKER"
              ]
            }
          },
          "cloudId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudMoleculeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudMoleculeName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudOwnerName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cluster": {
            "type": "object"
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "currentVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateInstalled": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "forceRestartTime": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "hostName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "instanceId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "isCloudAttachment": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "purgeHistoryDays": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "purgeImmediate": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UNKNOWN",
              "ONLINE",
              "WARNING",
              "OFFLINE"
            ]
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "CLOUD",
              "MOLECULE",
              "ATOM"
            ]
          }
        }
      },
      "AtomAS2Artifacts": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "logDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AtomBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Atom"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AtomConnectionFieldExtensionSummary": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "connectionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extensionGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "field": {
            "type": "object"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomConnectionFieldExtensionSummaryExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummarySimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryGroupingExpression"
          }
        ]
      },
      "AtomConnectionFieldExtensionSummaryGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummaryExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AtomConnectionFieldExtensionSummaryQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AtomConnectionFieldExtensionSummaryQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomConnectionFieldExtensionSummary"
            }
          }
        }
      },
      "AtomConnectionFieldExtensionSummarySimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "atomId",
              "extensionGroupId",
              "connectionId",
              "fieldId"
            ]
          }
        }
      },
      "AtomConnectorVersions": {
        "type": "object",
        "properties": {
          "ConnectorVersion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorVersion"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomConnectorVersionsBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AtomConnectorVersionsBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AtomConnectorVersions"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AtomCounters": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "counter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Counter"
            }
          }
        }
      },
      "AtomCountersAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomCounters"
            }
          }
        }
      },
      "AtomDiskSpace": {
        "type": "object",
        "properties": {
          "DiskSpaceDirectory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomDiskSpaceDirectory"
            }
          },
          "quotaLimit": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rawQuotaLimit": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "rawTotalSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "totalSize": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomDiskSpaceAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomDiskSpace"
            }
          }
        }
      },
      "AtomDiskSpaceDirectory": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "rawSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "size": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AtomSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AtomGroupingExpression"
          }
        ]
      },
      "AtomGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AtomLog": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "includeBin": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "logDate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomPurge": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AtomQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Atom"
            }
          }
        }
      },
      "AtomSecurityPolicies": {
        "required": [
          "atomId",
          "common"
        ],
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "browser": {
            "type": "object"
          },
          "common": {
            "type": "object"
          },
          "runner": {
            "type": "object"
          },
          "worker": {
            "type": "object"
          }
        }
      },
      "AtomSecurityPoliciesAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomSecurityPolicies"
            }
          }
        }
      },
      "AtomSecurityPoliciesType": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomSecurityPolicy"
            }
          }
        }
      },
      "AtomSecurityPolicy": {
        "required": [
          "privilegeType"
        ],
        "type": "object",
        "properties": {
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AtomSecurityPolicyArgumentType"
            }
          },
          "privilegeType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomSecurityPolicyArgumentType": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "NOT_EQUALS",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "id",
              "hostname",
              "status",
              "type",
              "capabilities"
            ]
          }
        }
      },
      "AtomStartupProperties": {
        "type": "object",
        "properties": {
          "Property": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AtomStartupPropertiesBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AtomStartupPropertiesBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AtomStartupProperties"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AtomWorkerLog": {
        "type": "object",
        "properties": {
          "workerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AttachmentInfo": {
        "type": "object",
        "properties": {
          "attachmentCache": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "attachmentContentType": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "application/xml",
                "application/pdf",
                "application/msword",
                "image/tiff",
                "image/jpeg",
                "text/plain"
              ]
            },
            "default": "application/xml"
          },
          "multipleAttachments": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AuditLog": {
        "type": "object",
        "properties": {
          "AuditLogProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogProperty"
            }
          },
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "action": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "containerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "documentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "level": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "message": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifier": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "source": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "userId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AuditLogBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "AuditLogBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/AuditLog"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "AuditLogExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/AuditLogSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/AuditLogGroupingExpression"
          }
        ]
      },
      "AuditLogGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLogExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "AuditLogProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "previousValue": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "AuditLogQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "AuditLogQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuditLog"
            }
          }
        }
      },
      "AuditLogSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "containerId",
              "userId",
              "date",
              "type",
              "action",
              "modifier",
              "level",
              "source"
            ]
          }
        }
      },
      "Branch": {
        "type": "object",
        "properties": {
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "deploymentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "packageId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ready": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "stage": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "BranchBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "BranchBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Branch"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "BranchExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/BranchSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/BranchGroupingExpression"
          }
        ]
      },
      "BranchGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BranchExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "BranchMergeRequest": {
        "required": [
          "sourceBranchId",
          "targetBranchId"
        ],
        "type": "object",
        "properties": {
          "ComponentMergeConfigs": {
            "type": "object"
          },
          "mergeScope": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mergeStrategy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "priorityBranch": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sourceBranchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "targetBranchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "BranchQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "BranchQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Branch"
            }
          }
        }
      },
      "BranchSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "BrowseField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "BulkId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ChangeListenerStatusRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "restart",
              "restart_all",
              "pause",
              "pause_all",
              "resume",
              "resume_all"
            ]
          },
          "containerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "listenerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ClearQueueRequest": {
        "required": [
          "AtomId",
          "QueueName"
        ],
        "type": "object",
        "properties": {
          "AtomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "DLQ": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "QueueName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "SubscriberName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Cloud": {
        "type": "object",
        "properties": {
          "Atom": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudAtom"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CloudAtom": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CloudBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "CloudBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Cloud"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "CloudExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CloudSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/CloudGroupingExpression"
          }
        ]
      },
      "CloudGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "CloudQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "CloudQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Cloud"
            }
          }
        }
      },
      "CloudSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "id"
            ]
          }
        }
      },
      "CompDiffAttribute": {
        "type": "object",
        "properties": {
          "idpart": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "ignored": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CompDiffConfig": {
        "type": "object",
        "properties": {
          "CompDiffElement": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompDiffElement"
            }
          },
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "certificate",
              "connector-action",
              "connector-settings",
              "crossref",
              "documentcache",
              "transform.map",
              "transform.function",
              "certificate.pgp",
              "process",
              "processproperty",
              "profile.db",
              "profile.edi",
              "profile.flatfile",
              "profile.xml",
              "profile.json",
              "queue",
              "tradingpartner",
              "tpgroup",
              "tporganization",
              "tpcommoptions",
              "webservice",
              "webservice.external",
              "processroute",
              "customlibrary",
              "edistandard",
              "flowservice",
              "script.processing",
              "script.mapping",
              "xslt"
            ]
          }
        }
      },
      "CompDiffElement": {
        "type": "object",
        "properties": {
          "CompDiffAttribute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompDiffAttribute"
            }
          },
          "ignored": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ordered": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "parent": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Component": {
        "required": [
          "description",
          "encryptedValues",
          "object",
          "processOverrides"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ComponentMetadata"
          },
          {
            "type": "object",
            "properties": {
              "encryptedValues": {
                "$ref": "#/components/schemas/EncryptedValues"
              },
              "description": {
                "type": "string",
                "xml": {
                  "namespace": "http://api.platform.boomi.com/"
                }
              },
              "object": {
                "type": "object",
                "xml": {
                  "namespace": "http://api.platform.boomi.com/"
                }
              },
              "processOverrides": {
                "type": "object",
                "xml": {
                  "namespace": "http://api.platform.boomi.com/"
                }
              },
              "folderFullPath": {
                "type": "string",
                "xml": {
                  "attribute": true
                }
              }
            }
          }
        ]
      },
      "ComponentAtomAttachment": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentAtomAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ComponentAtomAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ComponentAtomAttachmentGroupingExpression"
          }
        ]
      },
      "ComponentAtomAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentAtomAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ComponentAtomAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ComponentAtomAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentAtomAttachment"
            }
          }
        }
      },
      "ComponentAtomAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "atomId",
              "componentId",
              "componentType"
            ]
          }
        }
      },
      "ComponentBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ComponentBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Component"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ComponentDiffRequest": {
        "required": [
          "componentId",
          "sourceVersion",
          "targetVersion"
        ],
        "type": "object",
        "properties": {
          "CompDiffConfig": {
            "type": "object"
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sourceVersion": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "targetVersion": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentDiffRequestBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ComponentDiffRequestBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/ComponentDiffRequest"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ComponentEnvironmentAttachment": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentEnvironmentAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ComponentEnvironmentAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ComponentEnvironmentAttachmentGroupingExpression"
          }
        ]
      },
      "ComponentEnvironmentAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentEnvironmentAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ComponentEnvironmentAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ComponentEnvironmentAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentEnvironmentAttachment"
            }
          }
        }
      },
      "ComponentEnvironmentAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "componentId",
              "componentType"
            ]
          }
        }
      },
      "ComponentInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentMergeConfig": {
        "required": [
          "componentId"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "priorityBranch": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentMergeConfigs": {
        "type": "object",
        "properties": {
          "ComponentMergeConfig": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentMergeConfig"
            }
          }
        }
      },
      "ComponentMetadata": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "branchName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "copiedFromComponentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "copiedFromComponentVersion": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "currentVersion": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "folderId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "folderName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "subType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "certificate",
              "connector-action",
              "connector-settings",
              "crossref",
              "documentcache",
              "transform.map",
              "transform.function",
              "certificate.pgp",
              "process",
              "processproperty",
              "profile.db",
              "profile.edi",
              "profile.flatfile",
              "profile.xml",
              "profile.json",
              "queue",
              "tradingpartner",
              "tpgroup",
              "tporganization",
              "tpcommoptions",
              "webservice",
              "webservice.external",
              "processroute",
              "customlibrary",
              "edistandard",
              "flowservice",
              "script.processing",
              "script.mapping",
              "xslt"
            ]
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ComponentMetadataBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ComponentMetadataBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/ComponentMetadata"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ComponentMetadataExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ComponentMetadataSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ComponentMetadataGroupingExpression"
          }
        ]
      },
      "ComponentMetadataGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentMetadataExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ComponentMetadataQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ComponentMetadataQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentMetadata"
            }
          }
        }
      },
      "ComponentMetadataSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountId",
              "componentId",
              "version",
              "name",
              "type",
              "subType",
              "createdDate",
              "createdBy",
              "modifiedDate",
              "modifiedBy",
              "deleted",
              "currentVersion",
              "folderName",
              "folderId",
              "copiedFromComponentId",
              "copiedFromComponentVersion",
              "branchName",
              "branchId"
            ]
          }
        }
      },
      "ComponentReference": {
        "type": "object",
        "properties": {
          "references": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/References"
            }
          }
        }
      },
      "ComponentReferenceBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ComponentReferenceBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/ComponentReference"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ComponentReferenceExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ComponentReferenceSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ComponentReferenceGroupingExpression"
          }
        ]
      },
      "ComponentReferenceGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentReferenceExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ComponentReferenceQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ComponentReferenceQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentReference"
            }
          }
        }
      },
      "ComponentReferenceSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "parentComponentId",
              "parentVersion",
              "componentId",
              "type"
            ]
          }
        }
      },
      "Connection": {
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ConnectionLicensingReport": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "type": "object"
          }
        }
      },
      "Connections": {
        "type": "object",
        "properties": {
          "connection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connection"
            }
          }
        }
      },
      "Connector": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ConnectorBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ConnectorBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Connector"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ConnectorDocument": {
        "type": "object",
        "properties": {
          "genericConnectorRecordId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ConnectorExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ConnectorSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ConnectorGroupingExpression"
          }
        ]
      },
      "ConnectorField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ConnectorFields": {
        "type": "object",
        "properties": {
          "connectorField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorField"
            }
          }
        }
      },
      "ConnectorGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConnectorExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ConnectorQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ConnectorQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connector"
            }
          }
        }
      },
      "ConnectorSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "type",
              "name"
            ]
          }
        }
      },
      "ConnectorVersion": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ContactInfo": {
        "required": [
          "address1",
          "address2",
          "city",
          "contactName",
          "country",
          "email",
          "fax",
          "phone",
          "postalcode",
          "state"
        ],
        "type": "object",
        "properties": {
          "address1": {
            "type": "string"
          },
          "address2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "fax": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "postalcode": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "Counter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CrossReference": {
        "required": [
          "CrossReferenceRows"
        ],
        "type": "object",
        "properties": {
          "CrossReferenceRows": {
            "type": "object"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "overrideValues": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CrossReferenceInputs": {
        "type": "object",
        "properties": {
          "Input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReferenceParameter"
            }
          }
        }
      },
      "CrossReferenceOutputs": {
        "type": "object",
        "properties": {
          "Output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReferenceParameter"
            }
          }
        }
      },
      "CrossReferenceParameter": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "refId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CrossReferenceRow": {
        "type": "object",
        "properties": {
          "ref1": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref10": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref11": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref12": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref13": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref14": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref15": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref16": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref17": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref18": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref19": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref2": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref20": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref3": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref4": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref5": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref6": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref7": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref8": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ref9": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "CrossReferenceRows": {
        "type": "object",
        "properties": {
          "row": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReferenceRow"
            }
          }
        }
      },
      "CrossReferences": {
        "type": "object",
        "properties": {
          "crossReference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossReference"
            }
          }
        }
      },
      "CustomPartnerInfo": {
        "type": "object"
      },
      "CustomProperties": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyPair"
            }
          }
        }
      },
      "CustomTrackedField": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "character",
              "datetime",
              "number"
            ]
          }
        }
      },
      "CustomTrackedFieldExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CustomTrackedFieldSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/CustomTrackedFieldGroupingExpression"
          }
        ]
      },
      "CustomTrackedFieldGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTrackedFieldExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "CustomTrackedFieldQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "CustomTrackedFieldQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomTrackedField"
            }
          }
        }
      },
      "CustomTrackedFieldSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DefaultOFTPConnectionSettings": {
        "required": [
          "myPartnerInfo"
        ],
        "type": "object",
        "properties": {
          "clientSSLAlias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "host": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "myPartnerInfo": {
            "type": "object"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "sfidciph": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "ssidauth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "tls": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useClientSSL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useGateway": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DefaultOFTPPartnerSendSettings": {
        "type": "object",
        "properties": {
          "cd": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "operation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sfiddesc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sfiddsn": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DeployedExpiredCertificate": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificateId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificateName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificateType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "containerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "containerName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "location": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DeployedExpiredCertificateExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeployedExpiredCertificateSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/DeployedExpiredCertificateGroupingExpression"
          }
        ]
      },
      "DeployedExpiredCertificateGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeployedExpiredCertificateExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "DeployedExpiredCertificateQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "DeployedExpiredCertificateQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeployedExpiredCertificate"
            }
          }
        }
      },
      "DeployedExpiredCertificateSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "containerId",
              "containerName",
              "environmentId",
              "environmentName",
              "expirationBoundary"
            ]
          }
        }
      },
      "DeployedPackage": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "branchName": {
            "type": "string"
          },
          "componentId": {
            "type": "string"
          },
          "componentType": {
            "type": "string"
          },
          "componentVersion": {
            "type": "integer",
            "format": "int32"
          },
          "deployedBy": {
            "type": "string"
          },
          "deployedDate": {
            "type": "string",
            "format": "date-time"
          },
          "deploymentId": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "listenerStatus": {
            "type": "string",
            "enum": [
              "RUNNING",
              "PAUSED"
            ]
          },
          "message": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "packageVersion": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeployedPackageBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "DeployedPackageBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/DeployedPackage"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "DeployedPackageExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeployedPackageSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/DeployedPackageGroupingExpression"
          }
        ]
      },
      "DeployedPackageGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeployedPackageExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "DeployedPackageQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "DeployedPackageQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeployedPackage"
            }
          }
        }
      },
      "DeployedPackageSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "uid",
              "notes",
              "current",
              "packageNotes",
              "active",
              "componentId",
              "componentVersion",
              "componentName",
              "componentType",
              "deployedBy",
              "deployedDate",
              "deploymentId",
              "environmentId",
              "environmentName",
              "packageId",
              "packageVersion",
              "version",
              "accountId",
              "branch"
            ]
          }
        }
      },
      "DeployedProcess": {
        "required": [
          "ProcessProperties",
          "processId"
        ],
        "type": "object",
        "properties": {
          "ProcessProperties": {
            "type": "object"
          },
          "processId": {
            "type": "string"
          }
        }
      },
      "Deployment": {
        "required": [
          "componentId",
          "componentType",
          "deployedBy",
          "deployedOn",
          "digest",
          "environmentId",
          "id",
          "notes",
          "processId"
        ],
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string"
          },
          "componentType": {
            "type": "string"
          },
          "current": {
            "type": "boolean"
          },
          "deployedBy": {
            "type": "string"
          },
          "deployedOn": {
            "type": "string",
            "format": "date-time"
          },
          "digest": {
            "type": "string"
          },
          "environmentId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "listenerStatus": {
            "type": "string",
            "enum": [
              "RUNNING",
              "PAUSED"
            ]
          },
          "message": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "processId": {
            "type": "string"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeploymentBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "DeploymentBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Deployment"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "DeploymentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DeploymentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/DeploymentGroupingExpression"
          }
        ]
      },
      "DeploymentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "DeploymentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "DeploymentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deployment"
            }
          }
        }
      },
      "DeploymentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "processId",
              "componentId",
              "componentType",
              "current"
            ]
          }
        }
      },
      "DiskCommunicationOptions": {
        "type": "object",
        "properties": {
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "DiskGetOptions": {
            "type": "object"
          },
          "DiskSendOptions": {
            "type": "object"
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "DiskGetOptions": {
        "required": [
          "fileFilter",
          "getDirectory"
        ],
        "type": "object",
        "properties": {
          "deleteAfterRead": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "fileFilter": {
            "type": "string"
          },
          "filterMatchType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "wildcard",
              "regex"
            ]
          },
          "getDirectory": {
            "type": "string"
          },
          "maxFileCount": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "useDefaultGetOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DiskSendOptions": {
        "required": [
          "sendDirectory"
        ],
        "type": "object",
        "properties": {
          "createDirectory": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sendDirectory": {
            "type": "string"
          },
          "useDefaultSendOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "writeOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "unique",
              "over",
              "append",
              "abort"
            ]
          }
        }
      },
      "DocCacheKeyInput": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "keyId": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DocCacheKeyInputs": {
        "type": "object",
        "properties": {
          "Input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocCacheKeyInput"
            }
          }
        }
      },
      "DocCacheProfileParameter": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tagListKey": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DocCacheProfileParameters": {
        "type": "object",
        "properties": {
          "Output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocCacheProfileParameter"
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "genericConnectorRecordId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DocumentCountAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "DocumentCountAccountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DocumentCountAccountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/DocumentCountAccountGroupingExpression"
          }
        ]
      },
      "DocumentCountAccountGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DocumentCountAccount"
          }
        ]
      },
      "DocumentCountAccountGroupExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/DocumentCountAccountGroupSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/DocumentCountAccountGroupGroupingExpression"
          }
        ]
      },
      "DocumentCountAccountGroupGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCountAccountGroupExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "DocumentCountAccountGroupQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "DocumentCountAccountGroupQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCountAccountGroup"
            }
          }
        }
      },
      "DocumentCountAccountGroupSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountGroupId",
              "processDate"
            ]
          }
        }
      },
      "DocumentCountAccountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCountAccountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "DocumentCountAccountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "DocumentCountAccountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCountAccount"
            }
          }
        }
      },
      "DocumentCountAccountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "atomId",
              "processDate"
            ]
          }
        }
      },
      "DynamicProcessProperty": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EDIFACTConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "ackReport": {
            "type": "string"
          },
          "ackRequested": {
            "type": "string"
          },
          "ackStatus": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "controllingAgency": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "interchangeControlReference": {
            "type": "string"
          },
          "interchangeDate": {
            "type": "string"
          },
          "interchangeTime": {
            "type": "string"
          },
          "messageReferenceNumber": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "outboundValidationReport": {
            "type": "string"
          },
          "outboundValidationStatus": {
            "type": "string"
          },
          "receiverID": {
            "type": "string"
          },
          "release": {
            "type": "string"
          },
          "senderID": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "EDIFACTConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EDIFACTConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EDIFACTConnectorRecordGroupingExpression"
          }
        ]
      },
      "EDIFACTConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EDIFACTConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EDIFACTConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EDIFACTConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EDIFACTConnectorRecord"
            }
          }
        }
      },
      "EDIFACTConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EdiCustomConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "fromTradingPartner": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "toTradingPartner": {
            "type": "string"
          }
        }
      },
      "EdiCustomConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EdiCustomConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EdiCustomConnectorRecordGroupingExpression"
          }
        ]
      },
      "EdiCustomConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EdiCustomConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EdiCustomConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EdiCustomConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EdiCustomConnectorRecord"
            }
          }
        }
      },
      "EdiCustomConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EdiDelimiter": {
        "type": "object",
        "properties": {
          "delimiterSpecial": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "delimiterValue": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "stardelimited",
              "commadelimited",
              "tabdelimited",
              "tickdelimited",
              "bardelimited",
              "plusdelimited",
              "colondelimited",
              "caratdelimited",
              "ampersanddelimited",
              "bytecharacter",
              "othercharacter"
            ]
          }
        }
      },
      "EdiSegmentTerminator": {
        "type": "object",
        "properties": {
          "segmentTerminatorSpecial": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminatorValue": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "newline",
              "singlequote",
              "tilde",
              "carriagereturn",
              "bytecharacter",
              "othercharacter"
            ]
          }
        }
      },
      "EdifactControlInfo": {
        "required": [
          "UNBControlInfo",
          "UNHControlInfo"
        ],
        "type": "object",
        "properties": {
          "UNBControlInfo": {
            "type": "object"
          },
          "UNGControlInfo": {
            "type": "object"
          },
          "UNHControlInfo": {
            "type": "object"
          }
        }
      },
      "EdifactOptions": {
        "required": [
          "compositeDelimiter",
          "elementDelimiter",
          "segmentTerminator"
        ],
        "type": "object",
        "properties": {
          "acknowledgementoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "donotackitem",
              "ackitem"
            ]
          },
          "compositeDelimiter": {
            "type": "object"
          },
          "elementDelimiter": {
            "type": "object"
          },
          "envelopeoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "groupall",
              "groupfg",
              "groupmessage"
            ]
          },
          "filteracknowledgements": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "includeUNA": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundInterchangeValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundValidationOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "filterError",
              "failAll"
            ]
          },
          "rejectDuplicateUNB": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminator": {
            "type": "object"
          }
        }
      },
      "EdifactPartnerInfo": {
        "required": [
          "EdifactControlInfo",
          "EdifactOptions"
        ],
        "type": "object",
        "properties": {
          "EdifactControlInfo": {
            "type": "object"
          },
          "EdifactOptions": {
            "type": "object"
          }
        }
      },
      "Element": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EncryptedValue": {
        "type": "object",
        "properties": {
          "isSet": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "path": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EncryptedValues": {
        "type": "object",
        "properties": {
          "encryptedValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EncryptedValue"
            }
          }
        }
      },
      "Environment": {
        "type": "object",
        "properties": {
          "classification": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "PROD",
              "TEST"
            ]
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentAccount": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentEnvironment": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentAtomAttachment": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentAtomAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentAtomAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentAtomAttachmentGroupingExpression"
          }
        ]
      },
      "EnvironmentAtomAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentAtomAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentAtomAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentAtomAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentAtomAttachment"
            }
          }
        }
      },
      "EnvironmentAtomAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "atomId",
              "environmentId"
            ]
          }
        }
      },
      "EnvironmentBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "EnvironmentBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Environment"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "EnvironmentConnectionFieldExtensionSummary": {
        "required": [
          "field"
        ],
        "type": "object",
        "properties": {
          "connectionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extensionGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "field": {
            "type": "object"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentConnectionFieldExtensionSummaryExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummarySimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryGroupingExpression"
          }
        ]
      },
      "EnvironmentConnectionFieldExtensionSummaryGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummaryExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentConnectionFieldExtensionSummaryQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentConnectionFieldExtensionSummaryQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentConnectionFieldExtensionSummary"
            }
          }
        }
      },
      "EnvironmentConnectionFieldExtensionSummarySimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "extensionGroupId",
              "connectionId",
              "fieldId"
            ]
          }
        }
      },
      "EnvironmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentGroupingExpression"
          }
        ]
      },
      "EnvironmentExtensions": {
        "required": [
          "PGPCertificates",
          "connections",
          "crossReferences",
          "operations",
          "processProperties",
          "properties",
          "sharedCommunications",
          "tradingPartners"
        ],
        "type": "object",
        "properties": {
          "PGPCertificates": {
            "type": "object"
          },
          "connections": {
            "type": "object"
          },
          "crossReferences": {
            "type": "object"
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extensionGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "operations": {
            "type": "object"
          },
          "partial": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "processProperties": {
            "type": "object"
          },
          "properties": {
            "type": "object"
          },
          "sharedCommunications": {
            "type": "object"
          },
          "tradingPartners": {
            "type": "object"
          }
        }
      },
      "EnvironmentExtensionsBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "EnvironmentExtensionsBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/EnvironmentExtensions"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "EnvironmentExtensionsExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentExtensionsSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentExtensionsGroupingExpression"
          }
        ]
      },
      "EnvironmentExtensionsGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentExtensionsExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentExtensionsQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentExtensionsQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentExtensions"
            }
          }
        }
      },
      "EnvironmentExtensionsSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "extensionGroupId"
            ]
          }
        }
      },
      "EnvironmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentMapExtension": {
        "type": "object",
        "properties": {
          "Map": {
            "type": "object"
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extensionGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mapId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentMapExtensionBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "EnvironmentMapExtensionBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/EnvironmentMapExtension"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "EnvironmentMapExtensionExternalComponent": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentVersion": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "environmentMapExtensionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentMapExtensionExternalComponentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentGroupingExpression"
          }
        ]
      },
      "EnvironmentMapExtensionExternalComponentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentMapExtensionExternalComponentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentMapExtensionExternalComponentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionExternalComponent"
            }
          }
        }
      },
      "EnvironmentMapExtensionExternalComponentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ACCOUNT_ID",
              "ENVIRONMENT_MAP_EXTENSION_ID",
              "PACKAGED_COMPONENT_UID",
              "COMPONENT_ID",
              "COMPONENT_VERSION",
              "COMPONENT_NAME",
              "COMPONENT_TYPE"
            ]
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunction": {
        "required": [
          "Inputs",
          "Mappings",
          "Outputs",
          "Steps"
        ],
        "type": "object",
        "properties": {
          "Inputs": {
            "type": "object"
          },
          "Mappings": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "Steps": {
            "type": "object"
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentMapExtensionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunction"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummary": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "environmentMapExtensionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummaryExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummarySimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryGroupingExpression"
          }
        ]
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummaryGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummaryExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummaryQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummaryQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionUserDefinedFunctionSummary"
            }
          }
        }
      },
      "EnvironmentMapExtensionUserDefinedFunctionSummarySimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "extensionGroupId"
            ]
          }
        }
      },
      "EnvironmentMapExtensionsSummary": {
        "required": [
          "DestinationFieldSet",
          "SourceFieldSet"
        ],
        "type": "object",
        "properties": {
          "DestinationFieldSet": {
            "type": "object"
          },
          "SourceFieldSet": {
            "type": "object"
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "extensionGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "mapId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentMapExtensionsSummaryExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionsSummarySimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryGroupingExpression"
          }
        ]
      },
      "EnvironmentMapExtensionsSummaryGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionsSummaryExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentMapExtensionsSummaryQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentMapExtensionsSummaryQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentMapExtensionsSummary"
            }
          }
        }
      },
      "EnvironmentMapExtensionsSummarySimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "extensionGroupId"
            ]
          }
        }
      },
      "EnvironmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Environment"
            }
          }
        }
      },
      "EnvironmentRole": {
        "type": "object",
        "properties": {
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "roleId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "EnvironmentRoleBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "EnvironmentRoleBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/EnvironmentRole"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "EnvironmentRoleExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EnvironmentRoleSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EnvironmentRoleGroupingExpression"
          }
        ]
      },
      "EnvironmentRoleGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentRoleExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EnvironmentRoleQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EnvironmentRoleQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EnvironmentRole"
            }
          }
        }
      },
      "EnvironmentRoleSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "roleId"
            ]
          }
        }
      },
      "EnvironmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "id",
              "classification"
            ]
          }
        }
      },
      "Event": {
        "required": [
          "accountId",
          "atomId",
          "atomName",
          "classification",
          "endTime",
          "environment",
          "error",
          "errorType",
          "erroredStepLabel",
          "erroredStepType",
          "eventDate",
          "eventId",
          "eventLevel",
          "eventType",
          "executionId",
          "processId",
          "processName",
          "recordDate",
          "startTime",
          "status",
          "title",
          "topLevelProcessId",
          "updateDate"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "atomName": {
            "type": "string"
          },
          "classification": {
            "type": "string"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "environment": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "errorDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "errorType": {
            "type": "string"
          },
          "erroredStepLabel": {
            "type": "string"
          },
          "erroredStepType": {
            "type": "string"
          },
          "eventDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventId": {
            "type": "string"
          },
          "eventLevel": {
            "type": "string"
          },
          "eventType": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "inboundDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "outboundDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "processId": {
            "type": "string"
          },
          "processName": {
            "type": "string"
          },
          "recordDate": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "topLevelProcessId": {
            "type": "string"
          },
          "updateDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/EventSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/EventGroupingExpression"
          }
        ]
      },
      "EventGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "EventQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "EventQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "EventSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "eventId",
              "accountId",
              "atomId",
              "atomName",
              "eventLevel",
              "eventDate",
              "status",
              "eventType",
              "executionId",
              "title",
              "updateDate",
              "startTime",
              "endTime",
              "errorDocumentCount",
              "inboundDocumentCount",
              "outboundDocumentCount",
              "processName",
              "recordDate",
              "error",
              "environment",
              "classification"
            ]
          }
        }
      },
      "ExecutionArtifacts": {
        "type": "object",
        "properties": {
          "executionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExecutionConnector": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "connectorType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "errorCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "executionConnector": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "executionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "isStartShape": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "recordType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "successCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExecutionConnectorExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ExecutionConnectorSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ExecutionConnectorGroupingExpression"
          }
        ]
      },
      "ExecutionConnectorGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionConnectorExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ExecutionConnectorQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ExecutionConnectorQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionConnector"
            }
          }
        }
      },
      "ExecutionConnectorSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "executionId",
              "connectorType",
              "actionType",
              "errorCount",
              "successCount",
              "size",
              "isStartShape",
              "recordType"
            ]
          }
        }
      },
      "ExecutionCountAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "failures": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "successes": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExecutionCountAccountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ExecutionCountAccountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ExecutionCountAccountGroupingExpression"
          }
        ]
      },
      "ExecutionCountAccountGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ExecutionCountAccount"
          }
        ]
      },
      "ExecutionCountAccountGroupExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ExecutionCountAccountGroupSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ExecutionCountAccountGroupGroupingExpression"
          }
        ]
      },
      "ExecutionCountAccountGroupGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionCountAccountGroupExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ExecutionCountAccountGroupQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ExecutionCountAccountGroupQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionCountAccountGroup"
            }
          }
        }
      },
      "ExecutionCountAccountGroupSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountGroupId",
              "processDate"
            ]
          }
        }
      },
      "ExecutionCountAccountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionCountAccountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ExecutionCountAccountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ExecutionCountAccountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionCountAccount"
            }
          }
        }
      },
      "ExecutionCountAccountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "atomId",
              "processDate"
            ]
          }
        }
      },
      "ExecutionRecord": {
        "required": [
          "account",
          "atomId",
          "atomName",
          "executionId",
          "executionTime",
          "executionType",
          "launcherID",
          "message",
          "nodeId",
          "originalExecutionId",
          "parentExecutionId",
          "processId",
          "processName",
          "recordedDate",
          "reportKey",
          "status",
          "topLevelExecutionId"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "atomName": {
            "type": "string"
          },
          "executionDuration": {
            "type": "integer",
            "format": "int64"
          },
          "executionId": {
            "type": "string"
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          },
          "executionType": {
            "type": "string",
            "enum": [
              "exec_manual",
              "exec_sched",
              "exec_listener",
              "exec_listener_bridge",
              "exec_remote",
              "retry_manual",
              "retry_sched",
              "fiber",
              "sub_process",
              "test_manual",
              "test_sub_process",
              "unknown"
            ]
          },
          "inboundDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "inboundDocumentSize": {
            "type": "integer",
            "format": "int64"
          },
          "inboundErrorDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "launcherID": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "originalExecutionId": {
            "type": "string"
          },
          "outboundDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "outboundDocumentSize": {
            "type": "integer",
            "format": "int64"
          },
          "parentExecutionId": {
            "type": "string"
          },
          "processId": {
            "type": "string"
          },
          "processName": {
            "type": "string"
          },
          "recordedDate": {
            "type": "string",
            "format": "date-time"
          },
          "reportKey": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "topLevelExecutionId": {
            "type": "string"
          }
        }
      },
      "ExecutionRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ExecutionRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ExecutionRecordGroupingExpression"
          }
        ]
      },
      "ExecutionRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ExecutionRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ExecutionRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionRecord"
            }
          }
        }
      },
      "ExecutionRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "executionId",
              "originalExecutionId",
              "account",
              "executionTime",
              "status",
              "executionType",
              "processName",
              "processId",
              "atomName",
              "atomId",
              "inboundDocumentCount",
              "outboundDocumentCount",
              "executionDuration",
              "message",
              "reportKey",
              "launcherId",
              "nodeId",
              "recordedDate"
            ]
          }
        }
      },
      "ExecutionRequest": {
        "required": [
          "DynamicProcessProperties",
          "ProcessProperties",
          "atomId"
        ],
        "type": "object",
        "properties": {
          "DynamicProcessProperties": {
            "type": "object"
          },
          "ProcessProperties": {
            "type": "object"
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "recordUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExecutionRequestDynamicProcessProperties": {
        "type": "object",
        "properties": {
          "DynamicProcessProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DynamicProcessProperty"
            }
          }
        }
      },
      "ExecutionRequestProcessProperties": {
        "type": "object",
        "properties": {
          "ProcessProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessProperty"
            }
          }
        }
      },
      "ExecutionSummaryRecord": {
        "type": "object",
        "properties": {
          "accountID": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomID": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "elapsedTime": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "elapsedVarSum": {
            "type": "number",
            "format": "double",
            "xml": {
              "attribute": true
            }
          },
          "executionCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "inboundDocCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "inboundDocSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "launchElapsedTime": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "launcherID": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "maxElapsedTime": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "outboundDocCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "outboundDocSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "processID": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "reportKey": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "returnDocCount": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "returnDocSize": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "timeBlock": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ExecutionSummaryRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ExecutionSummaryRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ExecutionSummaryRecordGroupingExpression"
          }
        ]
      },
      "ExecutionSummaryRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummaryRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ExecutionSummaryRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ExecutionSummaryRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExecutionSummaryRecord"
            }
          }
        }
      },
      "ExecutionSummaryRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "processId",
              "timeBlock",
              "atomId",
              "status",
              "reportKey",
              "launcherId"
            ]
          }
        }
      },
      "Expression": {
        "type": "object"
      },
      "FTPCommunicationOptions": {
        "type": "object",
        "properties": {
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "FTPGetOptions": {
            "type": "object"
          },
          "FTPSendOptions": {
            "type": "object"
          },
          "FTPSettings": {
            "type": "object"
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "FTPGetOptions": {
        "required": [
          "fileToMove",
          "maxFileCount",
          "remoteDirectory"
        ],
        "type": "object",
        "properties": {
          "fileToMove": {
            "type": "string"
          },
          "ftpAction": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "actionget",
              "actiongetdelete",
              "actiongetmove"
            ]
          },
          "maxFileCount": {
            "type": "integer"
          },
          "remoteDirectory": {
            "type": "string"
          },
          "transferType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ascii",
              "binary"
            ]
          },
          "useDefaultGetOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FTPSSLOptions": {
        "required": [
          "clientSSLCertificate"
        ],
        "type": "object",
        "properties": {
          "clientSSLCertificate": {
            "type": "object"
          },
          "sslmode": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "none",
              "explicit",
              "implicit"
            ]
          },
          "useClientAuthentication": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FTPSendOptions": {
        "required": [
          "moveToDirectory",
          "remoteDirectory"
        ],
        "type": "object",
        "properties": {
          "ftpAction": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "actionputrename",
              "actionputappend",
              "actionputerror",
              "actionputoverwrite"
            ]
          },
          "moveToDirectory": {
            "type": "string"
          },
          "remoteDirectory": {
            "type": "string"
          },
          "transferType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ascii",
              "binary"
            ]
          },
          "useDefaultSendOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FTPSettings": {
        "required": [
          "FTPSSLOptions",
          "host",
          "password",
          "port",
          "user"
        ],
        "type": "object",
        "properties": {
          "FTPSSLOptions": {
            "type": "object"
          },
          "connectionMode": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "active",
              "passive"
            ]
          },
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "useDefaultSettings": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "user": {
            "type": "string"
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "componentOverride": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "customProperties": {
            "type": "object"
          },
          "encryptedValueSet": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useDefault": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "usesEncryption": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FieldSummary": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Field"
          },
          {
            "type": "object",
            "properties": {
              "oauth2AuthorizationUrl": {
                "type": "string",
                "xml": {
                  "attribute": true
                }
              }
            }
          }
        ]
      },
      "Folder": {
        "type": "object",
        "properties": {
          "PermittedRoles": {
            "type": "object"
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "fullPath": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "FolderBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "FolderBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Folder"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "FolderExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/FolderSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/FolderGroupingExpression"
          }
        ]
      },
      "FolderGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "FolderQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "FolderQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Folder"
            }
          }
        }
      },
      "FolderSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountId",
              "id",
              "name",
              "fullPath",
              "deleted",
              "parentId",
              "parentName",
              "permittedRoles"
            ]
          }
        }
      },
      "GSControlInfo": {
        "type": "object",
        "properties": {
          "applicationcode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "gsVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "respagencycode": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "T",
              "X"
            ]
          }
        }
      },
      "GenericConnectorRecord": {
        "required": [
          "connectorFields",
          "errorMessage",
          "trackedFields"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "actionType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "connectionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "connectionName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "connectorFields": {
            "type": "object"
          },
          "connectorType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "executionConnectorId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "executionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "incrementalDocumentIndex": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "operationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "operationName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "retryable": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "size": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "startShape": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          },
          "trackedFields": {
            "type": "object"
          }
        }
      },
      "GenericConnectorRecordBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "GenericConnectorRecordBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/GenericConnectorRecord"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "GenericConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/GenericConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/GenericConnectorRecordGroupingExpression"
          }
        ]
      },
      "GenericConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "GenericConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "GenericConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GenericConnectorRecord"
            }
          }
        }
      },
      "GenericConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "id",
              "executionConnectorId",
              "executionId",
              "connectionId",
              "operationId",
              "actionType",
              "connectorType",
              "atomId",
              "dateProcessed",
              "connectionName",
              "operationName",
              "errorMessage",
              "status",
              "documentIndex",
              "incrementalDocumentIndex",
              "size",
              "startShape",
              "retryable"
            ]
          }
        }
      },
      "GroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "nestedExpression": {
                "type": "array",
                "xml": {
                  "namespace": "http://api.platform.boomi.com/"
                },
                "items": {
                  "$ref": "#/components/schemas/Expression"
                }
              },
              "operator": {
                "type": "string",
                "xml": {
                  "attribute": true
                },
                "enum": [
                  "and",
                  "or"
                ]
              }
            }
          }
        ]
      },
      "HDType": {
        "type": "object",
        "properties": {
          "namespaceId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "universalId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "universalIdType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HL7ConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "acceptAckReport": {
            "type": "string"
          },
          "acceptAckStatus": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "ackReport": {
            "type": "string"
          },
          "ackStatus": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isValidMessage": {
            "type": "string"
          },
          "messageControlId": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "outboundValidationReport": {
            "type": "string"
          },
          "outboundValidationStatus": {
            "type": "string"
          },
          "receiverApplicationId": {
            "type": "string"
          },
          "receiverFacilityId": {
            "type": "string"
          },
          "senderApplicationId": {
            "type": "string"
          },
          "senderFacilityId": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "HL7ConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/HL7ConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/HL7ConnectorRecordGroupingExpression"
          }
        ]
      },
      "HL7ConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HL7ConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "HL7ConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "HL7ConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HL7ConnectorRecord"
            }
          }
        }
      },
      "HL7ConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HL7ControlInfo": {
        "required": [
          "MSHControlInfo"
        ],
        "type": "object",
        "properties": {
          "MSHControlInfo": {
            "type": "object"
          }
        }
      },
      "HL7Options": {
        "required": [
          "compositeDelimiter",
          "elementDelimiter",
          "segmentTerminator",
          "subCompositeDelimiter"
        ],
        "type": "object",
        "properties": {
          "acceptackoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "AL",
              "NE",
              "ER",
              "SU",
              "NOT_DEFINED"
            ]
          },
          "appackoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "AL",
              "NE",
              "ER",
              "SU",
              "NOT_DEFINED"
            ]
          },
          "batchoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "none",
              "batch"
            ]
          },
          "compositeDelimiter": {
            "type": "object"
          },
          "elementDelimiter": {
            "type": "object"
          },
          "filteracknowledgements": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundInterchangeValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundValidationOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "filterError",
              "failAll"
            ]
          },
          "rejectDuplicates": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminator": {
            "type": "object"
          },
          "subCompositeDelimiter": {
            "type": "object"
          }
        }
      },
      "HL7PartnerInfo": {
        "type": "object",
        "properties": {
          "HL7ControlInfo": {
            "type": "object"
          },
          "HL7Options": {
            "type": "object"
          }
        }
      },
      "HTTPAuthSettings": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "user": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPCommunicationOptions": {
        "type": "object",
        "properties": {
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "HTTPGetOptions": {
            "type": "object"
          },
          "HTTPListenOptions": {
            "type": "object"
          },
          "HTTPSendOptions": {
            "type": "object"
          },
          "HTTPSettings": {
            "type": "object"
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "HTTPEndpoint": {
        "required": [
          "sslOptions"
        ],
        "type": "object",
        "properties": {
          "sslOptions": {
            "type": "object"
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPGetOptions": {
        "required": [
          "pathElements",
          "requestHeaders",
          "responseHeaderMapping"
        ],
        "type": "object",
        "properties": {
          "dataContentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "followRedirects": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "methodType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ]
          },
          "pathElements": {
            "type": "object"
          },
          "reflectHeaders": {
            "type": "object"
          },
          "requestHeaders": {
            "type": "object"
          },
          "requestProfile": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestProfileType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "XML",
              "JSON"
            ]
          },
          "responseHeaderMapping": {
            "type": "object"
          },
          "responseProfile": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "responseProfileType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "XML",
              "JSON"
            ]
          },
          "returnErrors": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useDefaultOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPListenOptions": {
        "type": "object",
        "properties": {
          "mimePassthrough": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "objectName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "operationType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "password": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useDefaultListenOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "username": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPOAuth2Settings": {
        "required": [
          "accessTokenEndpoint",
          "accessTokenParameters",
          "authorizationParameters",
          "authorizationTokenEndpoint",
          "credentials",
          "scope"
        ],
        "type": "object",
        "properties": {
          "accessTokenEndpoint": {
            "type": "object"
          },
          "accessTokenParameters": {
            "type": "object"
          },
          "authorizationParameters": {
            "type": "object"
          },
          "authorizationTokenEndpoint": {
            "type": "object"
          },
          "credentials": {
            "type": "object"
          },
          "grantType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "code",
              "client_credentials",
              "password"
            ]
          },
          "scope": {
            "type": "string"
          }
        }
      },
      "HTTPOAuthCredentials": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "accessTokenKey": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "clientId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "clientSecret": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useRefreshToken": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPOAuthSettings": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "accessTokenURL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "authorizationURL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "consumerKey": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "consumerSecret": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "realm": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestTokenURL": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "signatureMethod": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SHA1",
              "SHA256"
            ]
          },
          "suppressBlankAccessToken": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "tokenSecret": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPPathElements": {
        "type": "object",
        "properties": {
          "element": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Element"
            }
          }
        }
      },
      "HTTPReflectHeaders": {
        "type": "object",
        "properties": {
          "element": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Element"
            }
          }
        }
      },
      "HTTPRequestHeaders": {
        "type": "object",
        "properties": {
          "header": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Header"
            }
          }
        }
      },
      "HTTPRequestParameters": {
        "type": "object",
        "properties": {
          "parameter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            }
          }
        }
      },
      "HTTPResponseHeaderMapping": {
        "type": "object",
        "properties": {
          "header": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Header"
            }
          }
        }
      },
      "HTTPSSLOptions": {
        "type": "object",
        "properties": {
          "clientauth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "clientsslalias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "trustServerCert": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "trustedcertalias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPSendOptions": {
        "required": [
          "pathElements",
          "requestHeaders",
          "responseHeaderMapping"
        ],
        "type": "object",
        "properties": {
          "dataContentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "followRedirects": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "methodType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "POST",
              "PUT",
              "DELETE"
            ]
          },
          "pathElements": {
            "type": "object"
          },
          "reflectHeaders": {
            "type": "object"
          },
          "requestHeaders": {
            "type": "object"
          },
          "requestProfile": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestProfileType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "XML",
              "JSON"
            ]
          },
          "responseHeaderMapping": {
            "type": "object"
          },
          "responseProfile": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "responseProfileType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "XML",
              "JSON"
            ]
          },
          "returnErrors": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "returnResponses": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useDefaultOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "HTTPSettings": {
        "required": [
          "HTTPAuthSettings",
          "HTTPSSLOptions"
        ],
        "type": "object",
        "properties": {
          "HTTPAuthSettings": {
            "type": "object"
          },
          "HTTPOAuth2Settings": {
            "type": "object"
          },
          "HTTPOAuthSettings": {
            "type": "object"
          },
          "HTTPSSLOptions": {
            "type": "object"
          },
          "authenticationType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NONE",
              "BASIC",
              "PASSWORD_DIGEST",
              "CUSTOM",
              "OAUTH",
              "OAUTH2"
            ]
          },
          "connectTimeout": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "cookieScope": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "IGNORED",
              "GLOBAL",
              "CONNECTOR_SHAPE"
            ]
          },
          "readTimeout": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useBasicAuth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useCustomAuth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useDefaultSettings": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Header": {
        "type": "object",
        "properties": {
          "headerFieldName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "targetPropertyName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ISAControlInfo": {
        "type": "object",
        "properties": {
          "ackrequested": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "authorizationInformation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "authorizationInformationQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "X12AUTHQUAL_00",
              "X12AUTHQUAL_01",
              "X12AUTHQUAL_02",
              "X12AUTHQUAL_03",
              "X12AUTHQUAL_04",
              "X12AUTHQUAL_05"
            ]
          },
          "componentElementSeparator": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeIdQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "X12IDQUAL_01",
              "X12IDQUAL_02",
              "X12IDQUAL_03",
              "X12IDQUAL_04",
              "X12IDQUAL_07",
              "X12IDQUAL_08",
              "X12IDQUAL_09",
              "X12IDQUAL_10",
              "X12IDQUAL_11",
              "X12IDQUAL_12",
              "X12IDQUAL_13",
              "X12IDQUAL_14",
              "X12IDQUAL_15",
              "X12IDQUAL_16",
              "X12IDQUAL_17",
              "X12IDQUAL_18",
              "X12IDQUAL_19",
              "X12IDQUAL_20",
              "X12IDQUAL_21",
              "X12IDQUAL_22",
              "X12IDQUAL_23",
              "X12IDQUAL_24",
              "X12IDQUAL_25",
              "X12IDQUAL_26",
              "X12IDQUAL_27",
              "X12IDQUAL_28",
              "X12IDQUAL_29",
              "X12IDQUAL_30",
              "X12IDQUAL_31",
              "X12IDQUAL_32",
              "X12IDQUAL_33",
              "X12IDQUAL_34",
              "X12IDQUAL_NR",
              "X12IDQUAL_ZZ"
            ]
          },
          "securityInformation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "securityInformationQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "X12SECQUAL_00",
              "X12SECQUAL_01"
            ]
          },
          "standardIdentification": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "testindicator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "P",
              "T"
            ]
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "InstallerToken": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "cloudId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "durationMinutes": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "installType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "CLOUD",
              "ATOM",
              "MOLECULE",
              "BROKER",
              "GATEWAY"
            ]
          },
          "token": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IntegrationPack": {
        "required": [
          "Description"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "installationType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SINGLE",
              "MULTI"
            ]
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IntegrationPackAtomAttachment": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "integrationPackInstanceId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IntegrationPackAtomAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IntegrationPackAtomAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/IntegrationPackAtomAttachmentGroupingExpression"
          }
        ]
      },
      "IntegrationPackAtomAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackAtomAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "IntegrationPackAtomAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "IntegrationPackAtomAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackAtomAttachment"
            }
          }
        }
      },
      "IntegrationPackAtomAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "atomId",
              "integrationPackInstanceId"
            ]
          }
        }
      },
      "IntegrationPackBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "IntegrationPackBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/IntegrationPack"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "IntegrationPackEnvironmentAttachment": {
        "type": "object",
        "properties": {
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "integrationPackInstanceId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IntegrationPackEnvironmentAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentGroupingExpression"
          }
        ]
      },
      "IntegrationPackEnvironmentAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "IntegrationPackEnvironmentAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "IntegrationPackEnvironmentAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackEnvironmentAttachment"
            }
          }
        }
      },
      "IntegrationPackEnvironmentAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "integrationPackInstanceId"
            ]
          }
        }
      },
      "IntegrationPackExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IntegrationPackSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/IntegrationPackGroupingExpression"
          }
        ]
      },
      "IntegrationPackGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "IntegrationPackInstance": {
        "type": "object",
        "properties": {
          "ProcessId": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessId"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "integrationPackId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "integrationPackOverrideName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "IntegrationPackInstanceBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "IntegrationPackInstanceBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/IntegrationPackInstance"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "IntegrationPackInstanceExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/IntegrationPackInstanceSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/IntegrationPackInstanceGroupingExpression"
          }
        ]
      },
      "IntegrationPackInstanceGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackInstanceExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "IntegrationPackInstanceQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "IntegrationPackInstanceQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPackInstance"
            }
          }
        }
      },
      "IntegrationPackInstanceSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "integrationPackOverrideName",
              "integrationPackName",
              "integrationPackId"
            ]
          }
        }
      },
      "IntegrationPackQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "IntegrationPackQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntegrationPack"
            }
          }
        }
      },
      "IntegrationPackSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "id",
              "installationType"
            ]
          }
        }
      },
      "JavaCorretto8Upgrade": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JavaUpgrade"
          }
        ]
      },
      "JavaRollback": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "JavaUpgrade": {
        "type": "object",
        "properties": {
          "JavaUpgradeOptions": {
            "type": "object"
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "JavaUpgradeOptions": {
        "required": [
          "cacertsPath",
          "externalJDKPath",
          "prefJreLocation"
        ],
        "type": "object",
        "properties": {
          "cacertsPath": {
            "type": "string"
          },
          "externalJDKPath": {
            "type": "string"
          },
          "migrateCertificate": {
            "type": "boolean"
          },
          "prefJreLocation": {
            "type": "string"
          }
        }
      },
      "License": {
        "type": "object",
        "properties": {
          "purchased": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "used": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Licensing": {
        "type": "object",
        "properties": {
          "enterprise": {
            "type": "object"
          },
          "enterpriseTest": {
            "type": "object"
          },
          "smallBusiness": {
            "type": "object"
          },
          "smallBusinessTest": {
            "type": "object"
          },
          "standard": {
            "type": "object"
          },
          "standardTest": {
            "type": "object"
          },
          "tradingPartner": {
            "type": "object"
          },
          "tradingPartnerTest": {
            "type": "object"
          }
        }
      },
      "ListQueues": {
        "type": "object",
        "properties": {
          "QueueRecord": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueueRecord"
            }
          }
        }
      },
      "ListQueuesAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListQueues"
            }
          }
        }
      },
      "ListenerPortConfiguration": {
        "type": "object",
        "properties": {
          "port": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedWebServerPort"
            }
          }
        }
      },
      "ListenerStatus": {
        "required": [
          "listenerId",
          "status"
        ],
        "type": "object",
        "properties": {
          "connectorType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "listenerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "status": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ListenerStatusAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListenerStatus"
            }
          }
        }
      },
      "ListenerStatusExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ListenerStatusSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ListenerStatusGroupingExpression"
          }
        ]
      },
      "ListenerStatusGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListenerStatusExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ListenerStatusQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ListenerStatusSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "listenerId",
              "containerId"
            ]
          }
        }
      },
      "MLLPCommunicationOptions": {
        "type": "object",
        "properties": {
          "MLLPSendSettings": {
            "type": "object"
          }
        }
      },
      "MLLPSSLOptions": {
        "type": "object",
        "properties": {
          "clientSSLAlias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sslAlias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useClientSSL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useSSL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MLLPSendSettings": {
        "required": [
          "MLLPSSLOptions",
          "endBlock",
          "endData",
          "host",
          "port",
          "startBlock"
        ],
        "type": "object",
        "properties": {
          "MLLPSSLOptions": {
            "type": "object"
          },
          "endBlock": {
            "type": "object"
          },
          "endData": {
            "type": "object"
          },
          "haltTimeout": {
            "type": "boolean",
            "default": false
          },
          "host": {
            "type": "string"
          },
          "inactivityTimeout": {
            "type": "integer",
            "format": "int32",
            "default": 60
          },
          "maxConnections": {
            "type": "integer",
            "format": "int32",
            "default": 10
          },
          "maxRetry": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "persistent": {
            "type": "boolean",
            "default": false
          },
          "port": {
            "type": "integer"
          },
          "receiveTimeout": {
            "type": "integer",
            "format": "int32",
            "default": 120
          },
          "sendTimeout": {
            "type": "integer",
            "format": "int32",
            "default": 120
          },
          "startBlock": {
            "type": "object"
          }
        }
      },
      "MSHControlInfo": {
        "required": [
          "Application",
          "Facility",
          "NetworkAddress",
          "ProcessingId"
        ],
        "type": "object",
        "properties": {
          "Application": {
            "type": "object"
          },
          "Facility": {
            "type": "object"
          },
          "NetworkAddress": {
            "type": "object"
          },
          "ProcessingId": {
            "type": "object"
          }
        }
      },
      "MapExtension": {
        "required": [
          "BrowseSettings",
          "DestinationProfile",
          "DestinationProfileExtensions",
          "ExtendedFunctions",
          "ExtendedMappings",
          "SourceProfile",
          "SourceProfileExtensions"
        ],
        "type": "object",
        "properties": {
          "BrowseSettings": {
            "type": "object"
          },
          "DestinationProfile": {
            "type": "object"
          },
          "DestinationProfileExtensions": {
            "type": "object"
          },
          "ExtendedFunctions": {
            "type": "object"
          },
          "ExtendedMappings": {
            "type": "object"
          },
          "SourceProfile": {
            "type": "object"
          },
          "SourceProfileExtensions": {
            "type": "object"
          }
        }
      },
      "MapExtensionBrowse": {
        "type": "object",
        "properties": {
          "BrowseFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrowseField"
            }
          },
          "sessionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionBrowseData": {
        "type": "object",
        "properties": {
          "BrowseField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrowseField"
            }
          },
          "connectionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionBrowseSettings": {
        "required": [
          "DestinationBrowse",
          "SourceBrowse"
        ],
        "type": "object",
        "properties": {
          "DestinationBrowse": {
            "type": "object"
          },
          "SourceBrowse": {
            "type": "object"
          },
          "containerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionExtendProfile": {
        "type": "object",
        "properties": {
          "Node": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsExtendedNode"
            }
          }
        }
      },
      "MapExtensionsCharacter": {
        "type": "object"
      },
      "MapExtensionsConfiguration": {
        "type": "object",
        "properties": {
          "CrossReferenceLookup": {
            "type": "object"
          },
          "DocCacheLookup": {
            "type": "object"
          },
          "DocumentProperty": {
            "type": "object"
          },
          "JapaneseCharacterConversion": {
            "type": "object"
          },
          "Scripting": {
            "type": "object"
          },
          "SequentialValue": {
            "type": "object"
          },
          "SimpleLookup": {
            "type": "object"
          },
          "StringConcat": {
            "type": "object"
          },
          "StringSplit": {
            "type": "object"
          },
          "UserDefinedFunction": {
            "type": "object"
          }
        }
      },
      "MapExtensionsCrossReferenceLookup": {
        "required": [
          "Inputs",
          "Outputs"
        ],
        "type": "object",
        "properties": {
          "Inputs": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "lookupTableId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "skipIfNoInputs": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsDateTime": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsDocCacheLookup": {
        "required": [
          "Inputs",
          "Outputs"
        ],
        "type": "object",
        "properties": {
          "Inputs": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "cacheIndex": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "docCache": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsDocumentProperty": {
        "type": "object",
        "properties": {
          "defaultValue": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "persist": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "propertyId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "propertyName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsExtendedMappings": {
        "type": "object",
        "properties": {
          "Mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsMapping"
            }
          }
        }
      },
      "MapExtensionsExtendedNode": {
        "type": "object",
        "properties": {
          "Character": {
            "type": "object"
          },
          "DateTime": {
            "type": "object"
          },
          "Number": {
            "type": "object"
          },
          "enforceUnique": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "fieldLengthValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mandatory": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsFunction": {
        "required": [
          "Configuration",
          "Inputs",
          "Outputs"
        ],
        "type": "object",
        "properties": {
          "Configuration": {
            "type": "object"
          },
          "Inputs": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "cacheType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "None",
              "ByDocument",
              "ByMap"
            ]
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "Count",
              "CurrentDate",
              "DateFormat",
              "LeftTrim",
              "LineItemIncrement",
              "MathABS",
              "MathAdd",
              "MathCeil",
              "MathDivide",
              "MathFloor",
              "MathMultiply",
              "MathSetPrecision",
              "MathSubtract",
              "NumberFormat",
              "PropertyGet",
              "PropertySet",
              "RightTrim",
              "RunningTotal",
              "StringAppend",
              "StringPrepend",
              "StringRemove",
              "StringReplace",
              "StringToLower",
              "StringToUpper",
              "Sum",
              "TrimWhitespace",
              "StringConcat",
              "StringSplit",
              "SequentialValue",
              "SimpleLookup",
              "DocumentPropertyGet",
              "DocumentPropertySet",
              "CrossRefLookup",
              "DocumentCacheLookup",
              "CustomScripting",
              "UserDefined",
              "JapaneseCharacterConversion"
            ]
          }
        }
      },
      "MapExtensionsFunctionMapping": {
        "type": "object",
        "properties": {
          "fromFunction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fromKey": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "toFunction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toKey": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsFunctionMappings": {
        "type": "object",
        "properties": {
          "Mapping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsFunctionMapping"
            }
          }
        }
      },
      "MapExtensionsFunctionStep": {
        "required": [
          "Configuration",
          "Inputs",
          "Outputs"
        ],
        "type": "object",
        "properties": {
          "Configuration": {
            "type": "object"
          },
          "Inputs": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "cacheType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "None",
              "ByDocument",
              "ByMap"
            ]
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "Count",
              "CurrentDate",
              "DateFormat",
              "LeftTrim",
              "LineItemIncrement",
              "MathABS",
              "MathAdd",
              "MathCeil",
              "MathDivide",
              "MathFloor",
              "MathMultiply",
              "MathSetPrecision",
              "MathSubtract",
              "NumberFormat",
              "PropertyGet",
              "PropertySet",
              "RightTrim",
              "RunningTotal",
              "StringAppend",
              "StringPrepend",
              "StringRemove",
              "StringReplace",
              "StringToLower",
              "StringToUpper",
              "Sum",
              "TrimWhitespace",
              "StringConcat",
              "StringSplit",
              "SequentialValue",
              "SimpleLookup",
              "DocumentPropertyGet",
              "DocumentPropertySet",
              "CrossRefLookup",
              "DocumentCacheLookup",
              "CustomScripting",
              "UserDefined",
              "JapaneseCharacterConversion"
            ]
          }
        }
      },
      "MapExtensionsFunctionSteps": {
        "type": "object",
        "properties": {
          "Step": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsFunctionStep"
            }
          }
        }
      },
      "MapExtensionsFunctions": {
        "type": "object",
        "properties": {
          "Function": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsFunction"
            }
          }
        }
      },
      "MapExtensionsInput": {
        "type": "object",
        "properties": {
          "default": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsInputs": {
        "type": "object",
        "properties": {
          "Input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsInput"
            }
          }
        }
      },
      "MapExtensionsJapaneseCharacterConversion": {
        "type": "object",
        "properties": {
          "convertFrom": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "convertTo": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsMapping": {
        "type": "object",
        "properties": {
          "fromFunction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fromXPath": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toFunction": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "toXPath": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsNode": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "xpath": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsNumber": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "impliedDecimal": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "signed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsOutput": {
        "type": "object",
        "properties": {
          "key": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsOutputs": {
        "type": "object",
        "properties": {
          "Output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsOutput"
            }
          }
        }
      },
      "MapExtensionsProfile": {
        "type": "object",
        "properties": {
          "Node": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapExtensionsNode"
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsScripting": {
        "required": [
          "Inputs",
          "Outputs",
          "Script"
        ],
        "type": "object",
        "properties": {
          "Inputs": {
            "type": "object"
          },
          "Outputs": {
            "type": "object"
          },
          "Script": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GROOVY",
              "GROOVY2",
              "Javascript"
            ]
          }
        }
      },
      "MapExtensionsSequentialValue": {
        "type": "object",
        "properties": {
          "batchSize": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "keyFixToLength": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "keyName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsSimpleLookup": {
        "required": [
          "Table"
        ],
        "type": "object",
        "properties": {
          "Table": {
            "type": "object"
          }
        }
      },
      "MapExtensionsStringConcat": {
        "type": "object",
        "properties": {
          "delimiter": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "fixedLength": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsStringSplit": {
        "type": "object",
        "properties": {
          "delimiter": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "splitLength": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MapExtensionsUserDefinedFunction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MergeRequest": {
        "required": [
          "MergeRequestDetails"
        ],
        "type": "object",
        "properties": {
          "MergeRequestDetails": {
            "type": "object"
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "destinationBranchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "destinationBranchName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "inactiveDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "lockNonce": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "lockedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "lockedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "mergeRequestAction": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UPDATE",
              "MERGE",
              "RETRY_DRAFTING",
              "REVERT"
            ]
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "note": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "previousStage": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NOT_EXIST",
              "DRAFTING",
              "FAILED_TO_DRAFT",
              "FAILED_TO_REDRAFT",
              "DRAFTED",
              "REVIEWING",
              "MERGING",
              "MERGED",
              "FAILED_TO_MERGE",
              "DELETED",
              "REDRAFTING",
              "REVERTED"
            ]
          },
          "priorityBranch": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SOURCE",
              "DESTINATION"
            ]
          },
          "sourceBranchId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sourceBranchName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "stage": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NOT_EXIST",
              "DRAFTING",
              "FAILED_TO_DRAFT",
              "FAILED_TO_REDRAFT",
              "DRAFTED",
              "REVIEWING",
              "MERGING",
              "MERGED",
              "FAILED_TO_MERGE",
              "DELETED",
              "REDRAFTING",
              "REVERTED"
            ]
          },
          "strategy": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "OVERRIDE",
              "CONFLICT_RESOLVE",
              "SUBSET"
            ]
          }
        }
      },
      "MergeRequestBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "MergeRequestBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/MergeRequest"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "MergeRequestDetail": {
        "type": "object",
        "properties": {
          "changeType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ADDED",
              "MODIFIED",
              "DELETED"
            ]
          },
          "componentGuid": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "conflict": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "createdBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "destinationRevision": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "lockedOnDestinationBranch": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "mergeRevision": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "modifiedBy": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "xml": {
              "attribute": true
            }
          },
          "resolution": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "OVERRIDE",
              "KEEP_DESTINATION"
            ]
          },
          "sourceRevision": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "stage": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DRAFTED",
              "REVIEWED",
              "CONFLICT_RESOLVED",
              "MERGED",
              "REVERTED"
            ]
          }
        }
      },
      "MergeRequestDetails": {
        "type": "object",
        "properties": {
          "MergeRequestDetail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MergeRequestDetail"
            }
          }
        }
      },
      "Molecule": {
        "type": "object",
        "properties": {
          "purchased": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "used": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "MoveQueueRequest": {
        "required": [
          "AtomId",
          "DestinationQueue",
          "SourceQueue"
        ],
        "type": "object",
        "properties": {
          "AtomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "DestinationQueue": {
            "type": "object"
          },
          "SourceQueue": {
            "type": "object"
          }
        }
      },
      "NodeDetails": {
        "required": [
          "clusterProblem",
          "hostName",
          "nodeId",
          "status"
        ],
        "type": "object",
        "properties": {
          "clusterProblem": {
            "type": "string"
          },
          "hostName": {
            "type": "string"
          },
          "nodeId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "NodeOffboard": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "nodeId": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "nodeId"
              }
            }
          }
        }
      },
      "Nodes": {
        "type": "object",
        "properties": {
          "node": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NodeDetails"
            }
          }
        }
      },
      "OFTP2ConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "initiator_ssidcode": {
            "type": "string"
          },
          "nareas": {
            "type": "string"
          },
          "nareast": {
            "type": "string"
          },
          "objecttype": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "responder_ssidcode": {
            "type": "string"
          },
          "sfidciph": {
            "type": "string"
          },
          "sfidcomp": {
            "type": "string"
          },
          "sfiddate": {
            "type": "string"
          },
          "sfiddesc": {
            "type": "string"
          },
          "sfiddest": {
            "type": "string"
          },
          "sfiddsn": {
            "type": "string"
          },
          "sfidenv": {
            "type": "string"
          },
          "sfidorig": {
            "type": "string"
          },
          "sfidosiz": {
            "type": "string"
          },
          "sfidsec": {
            "type": "string"
          },
          "sfidsign": {
            "type": "string"
          },
          "sfidtime": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string"
          },
          "successful": {
            "type": "boolean"
          },
          "ticker": {
            "type": "string"
          }
        }
      },
      "OFTP2ConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/OFTP2ConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/OFTP2ConnectorRecordGroupingExpression"
          }
        ]
      },
      "OFTP2ConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OFTP2ConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "OFTP2ConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "OFTP2ConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OFTP2ConnectorRecord"
            }
          }
        }
      },
      "OFTP2ConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPCommunicationOptions": {
        "type": "object",
        "properties": {
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "OFTPConnectionSettings": {
            "type": "object"
          },
          "OFTPGetOptions": {
            "type": "object"
          },
          "OFTPSendOptions": {
            "type": "object"
          },
          "OFTPServerListenOptions": {
            "type": "object"
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "OFTPConnectionSettings": {
        "required": [
          "myPartnerInfo"
        ],
        "type": "object",
        "properties": {
          "clientSSLAlias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "defaultOFTPConnectionSettings": {
            "type": "object"
          },
          "host": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "myPartnerInfo": {
            "type": "object"
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "sfidciph": {
            "type": "integer",
            "xml": {
              "attribute": true
            }
          },
          "ssidauth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "tls": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useClientSSL": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useGateway": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPGetOptions": {
        "required": [
          "OFTPPartnerGroup"
        ],
        "type": "object",
        "properties": {
          "OFTPPartnerGroup": {
            "type": "object"
          },
          "partnerGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPListenOptions": {
        "required": [
          "OFTPListenOptions",
          "OFTPPartnerGroup"
        ],
        "type": "object",
        "properties": {
          "OFTPListenOptions": {
            "type": "object"
          },
          "OFTPPartnerGroup": {
            "type": "object"
          },
          "partnerGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPListenOptionsInfo": {
        "required": [
          "GatewayPartnerGroup"
        ],
        "type": "object",
        "properties": {
          "GatewayPartnerGroup": {
            "type": "object"
          },
          "operation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useGateway": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPLocalInfo": {
        "type": "object",
        "properties": {
          "decrypting-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "session-authentication-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "signing-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "signing-eerp-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ssidcode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ssidpswd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPPartnerGroupType": {
        "required": [
          "myCompanyInfo",
          "myPartnerInfo"
        ],
        "type": "object",
        "properties": {
          "defaultPartnerInfo": {
            "type": "object"
          },
          "myCompanyInfo": {
            "type": "object"
          },
          "myPartnerInfo": {
            "type": "object"
          }
        }
      },
      "OFTPPartnerInfo": {
        "type": "object",
        "properties": {
          "clientSSLAlias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "encrypting-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "session-challenge-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sfidsec-encrypt": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sfidsec-sign": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sfidsign": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "ssidcmpr": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "ssidcode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ssidpswd": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "verifying-eerp-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "verifying-signature-certificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPSendOptions": {
        "required": [
          "OFTPPartnerGroup",
          "OFTPSendOptions"
        ],
        "type": "object",
        "properties": {
          "OFTPPartnerGroup": {
            "type": "object"
          },
          "OFTPSendOptions": {
            "type": "object"
          },
          "partnerGroupId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OFTPSendOptionsInfo": {
        "required": [
          "defaultPartnerSettings"
        ],
        "type": "object",
        "properties": {
          "cd": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "defaultPartnerSettings": {
            "type": "object"
          },
          "operation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sfiddesc": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "sfiddsn": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "OdetteControlInfo": {
        "required": [
          "OdetteUNBControlInfo",
          "OdetteUNHControlInfo"
        ],
        "type": "object",
        "properties": {
          "OdetteUNBControlInfo": {
            "type": "object"
          },
          "OdetteUNHControlInfo": {
            "type": "object"
          }
        }
      },
      "OdetteOptions": {
        "required": [
          "compositeDelimiter",
          "elementDelimiter",
          "segmentTerminator"
        ],
        "type": "object",
        "properties": {
          "acknowledgementoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "donotackitem",
              "ackitem"
            ]
          },
          "compositeDelimiter": {
            "type": "object"
          },
          "elementDelimiter": {
            "type": "object"
          },
          "envelopeoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "groupall",
              "groupmessage"
            ]
          },
          "filteracknowledgements": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "includeUNA": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundInterchangeValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundValidationOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "filterError",
              "failAll"
            ]
          },
          "rejectDuplicateUNB": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminator": {
            "type": "object"
          }
        }
      },
      "OdettePartnerInfo": {
        "required": [
          "OdetteControlInfo",
          "OdetteOptions"
        ],
        "type": "object",
        "properties": {
          "OdetteControlInfo": {
            "type": "object"
          },
          "OdetteOptions": {
            "type": "object"
          }
        }
      },
      "OdetteUNBControlInfo": {
        "type": "object",
        "properties": {
          "ackRequest": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "appReference": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "commAgreement": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeAddress": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeIdQual": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ODETTEIDQUAL_NA",
              "ODETTEIDQUAL_1",
              "ODETTEIDQUAL_4",
              "ODETTEIDQUAL_5",
              "ODETTEIDQUAL_8",
              "ODETTEIDQUAL_9",
              "ODETTEIDQUAL_12",
              "ODETTEIDQUAL_14",
              "ODETTEIDQUAL_18",
              "ODETTEIDQUAL_22",
              "ODETTEIDQUAL_30",
              "ODETTEIDQUAL_31",
              "ODETTEIDQUAL_33",
              "ODETTEIDQUAL_34",
              "ODETTEIDQUAL_51",
              "ODETTEIDQUAL_52",
              "ODETTEIDQUAL_53",
              "ODETTEIDQUAL_54",
              "ODETTEIDQUAL_55",
              "ODETTEIDQUAL_57",
              "ODETTEIDQUAL_58",
              "ODETTEIDQUAL_59",
              "ODETTEIDQUAL_61",
              "ODETTEIDQUAL_63",
              "ODETTEIDQUAL_65",
              "ODETTEIDQUAL_80",
              "ODETTEIDQUAL_82",
              "ODETTEIDQUAL_84",
              "ODETTEIDQUAL_85",
              "ODETTEIDQUAL_86",
              "ODETTEIDQUAL_87",
              "ODETTEIDQUAL_89",
              "ODETTEIDQUAL_90",
              "ODETTEIDQUAL_91",
              "ODETTEIDQUAL_92",
              "ODETTEIDQUAL_103",
              "ODETTEIDQUAL_128",
              "ODETTEIDQUAL_129",
              "ODETTEIDQUAL_144",
              "ODETTEIDQUAL_145",
              "ODETTEIDQUAL_146",
              "ODETTEIDQUAL_147",
              "ODETTEIDQUAL_148",
              "ODETTEIDQUAL_Z01",
              "ODETTEIDQUAL_ZZZ",
              "ODETTEIDQUAL_ZZ"
            ]
          },
          "interchangeSubAddress": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "priority": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NA",
              "A"
            ]
          },
          "referencePassword": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "referencePasswordQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NA",
              "AA",
              "BB"
            ]
          },
          "syntaxId": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UNOA",
              "UNOB",
              "UNOC",
              "UNOD",
              "UNOE",
              "UNOF"
            ]
          },
          "syntaxVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ODETTESYNTAXVERSION_1",
              "ODETTESYNTAXVERSION_2",
              "ODETTESYNTAXVERSION_3"
            ]
          },
          "testIndicator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ODETTETEST_NA",
              "ODETTETEST_1"
            ]
          }
        }
      },
      "OdetteUNHControlInfo": {
        "type": "object",
        "properties": {
          "assocAssignedCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "commonAccessRef": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "controllingAgency": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "AA",
              "AB",
              "AC",
              "AD",
              "AE",
              "CC",
              "CE",
              "EC",
              "ED",
              "EE",
              "EN",
              "ER",
              "EU",
              "EX",
              "IA",
              "KE",
              "LI",
              "OD",
              "RI",
              "RT",
              "UN"
            ]
          },
          "release": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ODETTERELEASE_1",
              "ODETTERELEASE_2",
              "ODETTERELEASE_902",
              "ODETTERELEASE_911",
              "ODETTERELEASE_912",
              "ODETTERELEASE_921",
              "ODETTERELEASE_932",
              "ODETTERELEASE_93A",
              "ODETTERELEASE_94A",
              "ODETTERELEASE_94B",
              "ODETTERELEASE_95A",
              "ODETTERELEASE_95B",
              "ODETTERELEASE_96A",
              "ODETTERELEASE_96B",
              "ODETTERELEASE_97A",
              "ODETTERELEASE_97B",
              "ODETTERELEASE_98A",
              "ODETTERELEASE_98B",
              "ODETTERELEASE_99A",
              "ODETTERELEASE_99B",
              "ODETTERELEASE_00A",
              "ODETTERELEASE_00B",
              "ODETTERELEASE_01A",
              "ODETTERELEASE_01B",
              "ODETTERELEASE_02A",
              "ODETTERELEASE_02B",
              "ODETTERELEASE_03A",
              "ODETTERELEASE_03B",
              "ODETTERELEASE_04A",
              "ODETTERELEASE_04B",
              "ODETTERELEASE_05A",
              "ODETTERELEASE_05B",
              "ODETTERELEASE_06A",
              "ODETTERELEASE_06B",
              "ODETTERELEASE_07A",
              "ODETTERELEASE_07B",
              "ODETTERELEASE_08A",
              "ODETTERELEASE_08B",
              "ODETTERELEASE_09A",
              "ODETTERELEASE_09B"
            ]
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ODETTEVERSION_1",
              "ODETTEVERSION_2",
              "ODETTEVERSION_4",
              "ODETTEVERSION_88",
              "ODETTEVERSION_89",
              "ODETTEVERSION_90",
              "ODETTEVERSION_D",
              "ODETTEVERSION_S"
            ]
          }
        }
      },
      "Operation": {
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Operations": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Operation"
            }
          }
        }
      },
      "OverrideProcessProperties": {
        "type": "object",
        "properties": {
          "ProcessProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OverrideProcessProperty"
            }
          }
        }
      },
      "OverrideProcessProperty": {
        "type": "object",
        "properties": {
          "ProcessPropertyValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessPropertyValue"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PGPCertificate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useDefault": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PGPCertificates": {
        "type": "object",
        "properties": {
          "PGPCertificate": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PGPCertificate"
            }
          }
        }
      },
      "PackagedComponent": {
        "required": [
          "branchName",
          "componentId",
          "componentType",
          "createdBy",
          "createdDate",
          "notes",
          "packageId",
          "packageVersion"
        ],
        "type": "object",
        "properties": {
          "branchName": {
            "type": "string"
          },
          "componentId": {
            "type": "string"
          },
          "componentType": {
            "type": "string"
          },
          "componentVersion": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "string"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "deleted": {
            "type": "boolean"
          },
          "fullyPubliclyConsumable": {
            "type": "boolean"
          },
          "notes": {
            "type": "string"
          },
          "packageId": {
            "type": "string"
          },
          "packageVersion": {
            "type": "string"
          },
          "shareable": {
            "type": "boolean"
          }
        }
      },
      "PackagedComponentBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "PackagedComponentBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/PackagedComponent"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "PackagedComponentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/PackagedComponentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/PackagedComponentGroupingExpression"
          }
        ]
      },
      "PackagedComponentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagedComponentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "PackagedComponentManifest": {
        "required": [
          "packageId"
        ],
        "type": "object",
        "properties": {
          "componentInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentInfo"
            }
          },
          "packageId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PackagedComponentManifestBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "PackagedComponentManifestBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/PackagedComponentManifest"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "PackagedComponentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "PackagedComponentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackagedComponent"
            }
          }
        }
      },
      "PackagedComponentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Parameter": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PartnerCommunication": {
        "type": "object",
        "properties": {
          "AS2CommunicationOptions": {
            "type": "object"
          },
          "DiskCommunicationOptions": {
            "type": "object"
          },
          "FTPCommunicationOptions": {
            "type": "object"
          },
          "HTTPCommunicationOptions": {
            "type": "object"
          },
          "MLLPCommunicationOptions": {
            "type": "object"
          },
          "OFTPCommunicationOptions": {
            "type": "object"
          },
          "SFTPCommunicationOptions": {
            "type": "object"
          }
        }
      },
      "PartnerDocumentType": {
        "type": "object",
        "properties": {
          "expectAckForOutbound": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "invalidDocumentRouting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "documentsPath",
              "errorsPath"
            ]
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "profileId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "qualifierValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "typeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "use999Ack": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "useTA1Ack": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "validateOutboundTransactionSets": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PartnerDocumentTypes": {
        "type": "object",
        "properties": {
          "PartnerDocumentType": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerDocumentType"
            }
          }
        }
      },
      "PartnerInfo": {
        "type": "object",
        "properties": {
          "CustomPartnerInfo": {
            "type": "object"
          },
          "EdifactPartnerInfo": {
            "type": "object"
          },
          "HL7PartnerInfo": {
            "type": "object"
          },
          "OdettePartnerInfo": {
            "type": "object"
          },
          "RosettaNetPartnerInfo": {
            "type": "object"
          },
          "TradacomsPartnerInfo": {
            "type": "object"
          },
          "X12PartnerInfo": {
            "type": "object"
          }
        }
      },
      "PermittedRoles": {
        "type": "object",
        "properties": {
          "RoleReference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleReference"
            }
          }
        }
      },
      "PersistedProcessProperties": {
        "required": [
          "atomId"
        ],
        "type": "object",
        "properties": {
          "Process": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeployedProcess"
            }
          },
          "atomId": {
            "type": "string"
          }
        }
      },
      "PersistedProcessPropertiesAsyncResponse": {
        "required": [
          "responseStatusCode"
        ],
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "responseStatusCode": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersistedProcessProperties"
            }
          }
        }
      },
      "PrivateCertificate": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "passPhrase": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Privilege": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Privileges": {
        "type": "object",
        "properties": {
          "Privilege": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Privilege"
            }
          }
        }
      },
      "Process": {
        "required": [
          "Description"
        ],
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "IntegrationPack": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessIntegrationPackInfo"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessAtomAttachment": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessAtomAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProcessAtomAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ProcessAtomAttachmentGroupingExpression"
          }
        ]
      },
      "ProcessAtomAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessAtomAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ProcessAtomAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProcessAtomAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessAtomAttachment"
            }
          }
        }
      },
      "ProcessAtomAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "atomId",
              "processId",
              "componentType"
            ]
          }
        }
      },
      "ProcessBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ProcessBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Process"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ProcessEnvironmentAttachment": {
        "type": "object",
        "properties": {
          "componentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "environmentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessEnvironmentAttachmentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProcessEnvironmentAttachmentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ProcessEnvironmentAttachmentGroupingExpression"
          }
        ]
      },
      "ProcessEnvironmentAttachmentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessEnvironmentAttachmentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ProcessEnvironmentAttachmentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProcessEnvironmentAttachmentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessEnvironmentAttachment"
            }
          }
        }
      },
      "ProcessEnvironmentAttachmentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "processId",
              "componentType"
            ]
          }
        }
      },
      "ProcessExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProcessSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ProcessGroupingExpression"
          }
        ]
      },
      "ProcessGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ProcessId": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "originalProcessId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "wrapperProcessId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessIntegrationPackInfo": {
        "type": "object",
        "properties": {
          "integrationPackId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "integrationPackInstanceId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessLog": {
        "type": "object",
        "properties": {
          "executionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "logLevel": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SEVERE",
              "WARNING",
              "INFO",
              "CONFIG",
              "FINE",
              "FINER",
              "FINEST",
              "ALL"
            ]
          }
        }
      },
      "ProcessProperties": {
        "type": "object",
        "properties": {
          "ProcessProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessProperty"
            }
          }
        }
      },
      "ProcessProperty": {
        "type": "object",
        "properties": {
          "ProcessPropertyValue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessPropertyValue"
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessPropertyValue": {
        "type": "object",
        "properties": {
          "componentOverride": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "encryptedValueSet": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "label": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "useDefault": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "usesEncryption": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "validate": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProcessQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Process"
            }
          }
        }
      },
      "ProcessScheduleStatus": {
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "enabled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessScheduleStatusBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ProcessScheduleStatusBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/ProcessScheduleStatus"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ProcessScheduleStatusExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProcessScheduleStatusSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ProcessScheduleStatusGroupingExpression"
          }
        ]
      },
      "ProcessScheduleStatusGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessScheduleStatusExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ProcessScheduleStatusQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProcessScheduleStatusQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessScheduleStatus"
            }
          }
        }
      },
      "ProcessScheduleStatusSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "processId",
              "atomId"
            ]
          }
        }
      },
      "ProcessSchedules": {
        "type": "object",
        "properties": {
          "Retry": {
            "type": "object"
          },
          "Schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            }
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessSchedulesBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "ProcessSchedulesBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/ProcessSchedules"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "ProcessSchedulesExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ProcessSchedulesSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ProcessSchedulesGroupingExpression"
          }
        ]
      },
      "ProcessSchedulesGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessSchedulesExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ProcessSchedulesQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ProcessSchedulesQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessSchedules"
            }
          }
        }
      },
      "ProcessSchedulesSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "processId",
              "atomId"
            ]
          }
        }
      },
      "ProcessSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "id",
              "integrationPackId",
              "integrationPackInstanceId"
            ]
          }
        }
      },
      "ProcessingGroupDefaultRouting": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupDocumentBasedRouting": {
        "type": "object",
        "properties": {
          "StandardRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupDocumentStandardRoute"
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupDocumentPartnerRoute": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tradingPartnerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupDocumentStandardRoute": {
        "type": "object",
        "properties": {
          "DocumentTypeRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupDocumentTypeRoute"
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "standard": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "x12",
              "edifact",
              "hl7",
              "custom",
              "rosettanet",
              "tradacoms",
              "odette"
            ]
          }
        }
      },
      "ProcessingGroupDocumentTypeRoute": {
        "type": "object",
        "properties": {
          "PartnerRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupDocumentPartnerRoute"
            }
          },
          "documentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupPartnerBasedRouting": {
        "type": "object",
        "properties": {
          "PartnerRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupPartnerRoute"
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupPartnerDocumentRoute": {
        "type": "object",
        "properties": {
          "documentType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupPartnerRoute": {
        "type": "object",
        "properties": {
          "StandardRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupPartnerStandardRoute"
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "tradingPartnerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupPartnerStandardRoute": {
        "type": "object",
        "properties": {
          "DocumentTypeRoute": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupPartnerDocumentRoute"
            }
          },
          "processId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "standard": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "x12",
              "edifact",
              "hl7",
              "custom",
              "rosettanet",
              "tradacoms",
              "odette"
            ]
          }
        }
      },
      "ProcessingGroupTradingPartner": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ProcessingGroupTradingPartners": {
        "type": "object",
        "properties": {
          "TradingPartner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProcessingGroupTradingPartner"
            }
          }
        }
      },
      "ProcessingType": {
        "type": "object",
        "properties": {
          "processingId": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "D",
              "P",
              "T"
            ]
          },
          "processingMode": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "A",
              "R",
              "I",
              "T",
              "NOT_PRESENT"
            ]
          }
        }
      },
      "Properties": {
        "type": "object",
        "properties": {
          "property": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            }
          }
        }
      },
      "Property": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PropertyPair": {
        "type": "object",
        "properties": {
          "encrypted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "key": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "PublicCertificate": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "certificate": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            }
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "QueryFilter": {
        "required": [
          "expression"
        ],
        "type": "object",
        "properties": {
          "expression": {
            "type": "object"
          }
        }
      },
      "QueueAttributes": {
        "required": [
          "DLQ",
          "QueueName"
        ],
        "type": "object",
        "properties": {
          "DLQ": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "QueueName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "SubscriberName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "QueueRecord": {
        "type": "object",
        "properties": {
          "deadLettersCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "messagesCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "queueName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "queueType": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "topicSubscribers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TopicSubscriber"
            }
          }
        }
      },
      "References": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentComponentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentVersion": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DEPENDENT",
              "INDEPENDENT"
            ]
          }
        }
      },
      "RerunDocument": {
        "required": [
          "AllDocuments",
          "SelectedDocuments",
          "originalExecutionId"
        ],
        "type": "object",
        "properties": {
          "AllDocuments": {
            "type": "object"
          },
          "SelectedDocuments": {
            "type": "object"
          },
          "originalExecutionId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "recordUrl": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "requestId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "Description": {
            "type": "string"
          },
          "Privileges": {
            "type": "object"
          },
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "parentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "RoleBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "RoleBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/Role"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "RoleExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/RoleSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/RoleGroupingExpression"
          }
        ]
      },
      "RoleGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RoleExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "RoleQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "RoleQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "RoleReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "RoleSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "parentId"
            ]
          }
        }
      },
      "Roles": {
        "type": "object",
        "properties": {
          "Role": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Role"
            }
          }
        }
      },
      "RosettaNetConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "PIPCode": {
            "type": "string"
          },
          "PIPVersion": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "ackReport": {
            "type": "string"
          },
          "ackStatus": {
            "type": "string"
          },
          "actionInstanceIdentifier": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "attemptCount": {
            "type": "string"
          },
          "businessActivityIdentifier": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "dateTime": {
            "type": "string"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "frameworkVersion": {
            "type": "string"
          },
          "fromGlobalBusinessServiceCode": {
            "type": "string"
          },
          "fromGlobalPartnerRoleClassificationCode": {
            "type": "string"
          },
          "globalBusinessActionCode": {
            "type": "string"
          },
          "globalDocumentFunctionCode": {
            "type": "string"
          },
          "globalProcessCode": {
            "type": "string"
          },
          "globalUsageCode": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "inResponseToGlobalBusinessActionCode": {
            "type": "string"
          },
          "inResponseToInstanceIdentifier": {
            "type": "string"
          },
          "isSecureTransportRequired": {
            "type": "string"
          },
          "knownInitiatingPartnerID": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "outboundValidationReport": {
            "type": "string"
          },
          "outboundValidationStatus": {
            "type": "string"
          },
          "processInstanceIdentifier": {
            "type": "string"
          },
          "receiverID": {
            "type": "string"
          },
          "senderID": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "timeToAcknowledgeAcceptance": {
            "type": "string"
          },
          "timeToAcknowledgeReceipt": {
            "type": "string"
          },
          "timeToPerform": {
            "type": "string"
          },
          "toGlobalBusinessServiceCode": {
            "type": "string"
          },
          "toGlobalPartnerRoleClassificationCode": {
            "type": "string"
          },
          "transactionInstanceIdentifier": {
            "type": "string"
          }
        }
      },
      "RosettaNetConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/RosettaNetConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/RosettaNetConnectorRecordGroupingExpression"
          }
        ]
      },
      "RosettaNetConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RosettaNetConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "RosettaNetConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "RosettaNetConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RosettaNetConnectorRecord"
            }
          }
        }
      },
      "RosettaNetConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "RosettaNetControlInfo": {
        "type": "object",
        "properties": {
          "encryptionPublicCertificate": {
            "type": "object"
          },
          "globalPartnerClassificationCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "globalUsageCode": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "Test",
              "Production"
            ]
          },
          "partnerId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "partnerIdType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "DUNS"
            ]
          },
          "partnerLocation": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "signingPublicCertificate": {
            "type": "object"
          },
          "supplyChainCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "RosettaNetMessageOptions": {
        "type": "object",
        "properties": {
          "attachmentCache": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "compressed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "contentTransferEncoding": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "binary",
              "base64"
            ]
          },
          "encryptServiceHeader": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "encrypted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "encryptionAlgorithm": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "na",
              "tripledes",
              "des",
              "rc2-128",
              "rc2-64",
              "rc2-40",
              "aes-128",
              "aes-192",
              "aes-256"
            ]
          },
          "signatureDigestAlgorithm": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "SHA1",
              "SHA224",
              "SHA256",
              "SHA384",
              "SHA512"
            ]
          },
          "signed": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "RosettaNetOptions": {
        "type": "object",
        "properties": {
          "filterSignals": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundDocumentValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "rejectDuplicateTransactions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "v11",
              "v20"
            ]
          }
        }
      },
      "RosettaNetPartnerInfo": {
        "type": "object",
        "properties": {
          "RosettaNetControlInfo": {
            "type": "object"
          },
          "RosettaNetMessageOptions": {
            "type": "object"
          },
          "RosettaNetOptions": {
            "type": "object"
          }
        }
      },
      "SFTPCommunicationOptions": {
        "type": "object",
        "properties": {
          "CommunicationSetting": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "default",
              "custom",
              "component"
            ]
          },
          "SFTPGetOptions": {
            "type": "object"
          },
          "SFTPSendOptions": {
            "type": "object"
          },
          "SFTPSettings": {
            "type": "object"
          },
          "SharedCommunicationChannel": {
            "type": "object"
          }
        }
      },
      "SFTPGetOptions": {
        "required": [
          "fileToMove",
          "maxFileCount",
          "moveToDirectory",
          "remoteDirectory"
        ],
        "type": "object",
        "properties": {
          "fileToMove": {
            "type": "string"
          },
          "ftpAction": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "actionget",
              "actiongetdelete",
              "actiongetmove"
            ]
          },
          "maxFileCount": {
            "type": "integer"
          },
          "moveToDirectory": {
            "type": "string"
          },
          "moveToForceOverride": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "remoteDirectory": {
            "type": "string"
          },
          "useDefaultGetOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SFTPProxySettings": {
        "required": [
          "host",
          "password",
          "port",
          "user"
        ],
        "type": "object",
        "properties": {
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "proxyEnabled": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "ATOM",
              "HTTP",
              "SOCKS4",
              "SOCKS5"
            ]
          },
          "user": {
            "type": "string"
          }
        }
      },
      "SFTPSSHOptions": {
        "required": [
          "knownHostEntry",
          "sshkeypassword",
          "sshkeypath"
        ],
        "type": "object",
        "properties": {
          "dhKeySizeMax1024": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "knownHostEntry": {
            "type": "string"
          },
          "sshkeyauth": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sshkeypassword": {
            "type": "string"
          },
          "sshkeypath": {
            "type": "string"
          }
        }
      },
      "SFTPSendOptions": {
        "required": [
          "moveToDirectory",
          "remoteDirectory"
        ],
        "type": "object",
        "properties": {
          "ftpAction": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "actionputrename",
              "actionputappend",
              "actionputerror",
              "actionputoverwrite"
            ]
          },
          "moveToDirectory": {
            "type": "string"
          },
          "moveToForceOverride": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "remoteDirectory": {
            "type": "string"
          },
          "useDefaultSendOptions": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SFTPSettings": {
        "required": [
          "SFTPProxySettings",
          "SFTPSSHOptions",
          "host",
          "password",
          "port",
          "user"
        ],
        "type": "object",
        "properties": {
          "SFTPProxySettings": {
            "type": "object"
          },
          "SFTPSSHOptions": {
            "type": "object"
          },
          "host": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "useDefaultSettings": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "user": {
            "type": "string"
          }
        }
      },
      "STXControlInfo": {
        "type": "object",
        "properties": {
          "interchangeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeIdQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "daysOfMonth": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "daysOfWeek": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "hours": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "minutes": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "months": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "years": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ScheduleRetry": {
        "type": "object",
        "properties": {
          "Schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Schedule"
            }
          },
          "maxRetry": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ScriptingInputs": {
        "type": "object",
        "properties": {
          "Input": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScriptingParameter"
            }
          }
        }
      },
      "ScriptingOutputs": {
        "type": "object",
        "properties": {
          "Output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScriptingParameter"
            }
          }
        }
      },
      "ScriptingParameter": {
        "type": "object",
        "properties": {
          "dataType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "CHARACTER",
              "DATETIME",
              "FLOAT",
              "INTEGER"
            ]
          },
          "index": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SelectedDocuments": {
        "type": "object",
        "properties": {
          "Document": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "SharedCommunication": {
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SharedCommunicationChannel": {
        "type": "object",
        "properties": {
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SharedCommunications": {
        "type": "object",
        "properties": {
          "sharedCommunication": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedCommunication"
            }
          }
        }
      },
      "SharedServerInformation": {
        "type": "object",
        "properties": {
          "apiType": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "basic",
              "intermediate",
              "advanced"
            ]
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "auth": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "none",
              "basic"
            ]
          },
          "authToken": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "checkForwardedHeaders": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "externalHost": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "externalHttpPort": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "externalHttpsPort": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "httpPort": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "httpsPort": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "internalHost": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "maxThreads": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "minAuth": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "none",
              "basic"
            ]
          },
          "overrideUrl": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "sslCertificateId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "url": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SharedServerInformationBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "SharedServerInformationBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/SharedServerInformation"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "SharedWebServer": {
        "required": [
          "atomId",
          "cloudTennantGeneral",
          "corsConfiguration",
          "generalSettings",
          "userManagement"
        ],
        "type": "object",
        "properties": {
          "atomId": {
            "type": "string"
          },
          "cloudTennantGeneral": {
            "type": "object"
          },
          "corsConfiguration": {
            "type": "object"
          },
          "generalSettings": {
            "type": "object"
          },
          "shouldRestartPlugin": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "userManagement": {
            "type": "object"
          }
        }
      },
      "SharedWebServerAuthentication": {
        "required": [
          "authType",
          "clientCertificateHeaderName",
          "loginModuleClassName",
          "loginModuleOptions"
        ],
        "type": "object",
        "properties": {
          "authType": {
            "type": "string"
          },
          "cacheAuthenticationTimeout": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "cacheAuthorizationCredentials": {
            "type": "boolean"
          },
          "clientCertificateHeaderName": {
            "type": "string"
          },
          "loginModuleClassName": {
            "type": "string"
          },
          "loginModuleOptions": {
            "type": "object"
          }
        }
      },
      "SharedWebServerBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "SharedWebServerBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/SharedWebServer"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "SharedWebServerCORSOrigin": {
        "required": [
          "domain"
        ],
        "type": "object",
        "properties": {
          "EnableHTTPRequestHandling": {
            "type": "boolean",
            "default": false
          },
          "EnableHTTPSRequestHandling": {
            "type": "boolean",
            "default": false
          },
          "allowCredentials": {
            "type": "boolean",
            "default": false
          },
          "allowMethods": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "allowRequestHeaders": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "allowResponseHeaders": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "cacheTimeout": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "domain": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ports": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "SharedWebServerCloudTennantGeneral": {
        "required": [
          "apiType",
          "authType",
          "baseUrl",
          "listenerPorts"
        ],
        "type": "object",
        "properties": {
          "apiType": {
            "type": "string"
          },
          "authType": {
            "type": "string"
          },
          "baseUrl": {
            "type": "string"
          },
          "listenerPorts": {
            "type": "object"
          }
        }
      },
      "SharedWebServerCors": {
        "type": "object",
        "properties": {
          "origins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedWebServerCORSOrigin"
            }
          }
        }
      },
      "SharedWebServerGeneral": {
        "required": [
          "apiType",
          "authentication",
          "baseUrl",
          "externalHost",
          "internalHost",
          "listenerPorts",
          "protectedHeaders",
          "sslCertificate"
        ],
        "type": "object",
        "properties": {
          "apiType": {
            "type": "string"
          },
          "authentication": {
            "type": "object"
          },
          "baseUrl": {
            "type": "string"
          },
          "examineForwardHeaders": {
            "type": "boolean"
          },
          "externalHost": {
            "type": "string"
          },
          "internalHost": {
            "type": "string"
          },
          "listenerPorts": {
            "type": "object"
          },
          "maxNumberOfThreads": {
            "type": "integer",
            "format": "int32"
          },
          "overrideUrl": {
            "type": "boolean"
          },
          "protectedHeaders": {
            "type": "object"
          },
          "sslCertificate": {
            "type": "string"
          }
        }
      },
      "SharedWebServerLoginModuleConfiguration": {
        "type": "object",
        "properties": {
          "loginModule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedWebServerLoginModuleOption"
            }
          }
        }
      },
      "SharedWebServerLoginModuleOption": {
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "encrypt": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "SharedWebServerPort": {
        "required": [
          "authType",
          "baseUrlForRequest"
        ],
        "type": "object",
        "properties": {
          "authType": {
            "type": "string"
          },
          "baseUrlForRequest": {
            "type": "string"
          },
          "defaultPort": {
            "type": "boolean"
          },
          "enablePort": {
            "type": "boolean"
          },
          "externalPort": {
            "type": "integer",
            "format": "int32"
          },
          "externalSSL": {
            "type": "boolean"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "ssl": {
            "type": "boolean"
          }
        }
      },
      "SharedWebServerProtectedHeaders": {
        "type": "object",
        "properties": {
          "header": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          }
        }
      },
      "SharedWebServerUser": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "clientCertificate": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "externalUsername": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "ipFilters": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "roleAssociations": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "header"
              }
            }
          },
          "token": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "username": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "usingComponentFilters": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "usingIPFilters": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "SharedWebServerUserManagement": {
        "type": "object",
        "properties": {
          "enableAPIMInternalRoles": {
            "type": "boolean"
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedWebServerUser"
            }
          }
        }
      },
      "SimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Expression"
          },
          {
            "type": "object",
            "properties": {
              "argument": {
                "type": "array",
                "xml": {
                  "namespace": "http://api.platform.boomi.com/"
                },
                "items": {
                  "type": "string",
                  "xml": {
                    "name": "argument"
                  }
                }
              },
              "operator": {
                "type": "string",
                "xml": {
                  "attribute": true
                }
              },
              "property": {
                "type": "string",
                "xml": {
                  "attribute": true
                }
              }
            }
          }
        ]
      },
      "SimpleLookupTable": {
        "required": [
          "Rows"
        ],
        "type": "object",
        "properties": {
          "Rows": {
            "type": "object"
          }
        }
      },
      "SimpleLookupTableRow": {
        "required": [
          "ref1",
          "ref2"
        ],
        "type": "object",
        "properties": {
          "ref1": {
            "type": "string"
          },
          "ref2": {
            "type": "string"
          }
        }
      },
      "SimpleLookupTableRows": {
        "type": "object",
        "properties": {
          "Row": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SimpleLookupTableRow"
            }
          }
        }
      },
      "ThroughputAccount": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "atomId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "date": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "ThroughputAccountExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ThroughputAccountSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ThroughputAccountGroupingExpression"
          }
        ]
      },
      "ThroughputAccountGroup": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ThroughputAccount"
          }
        ]
      },
      "ThroughputAccountGroupExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/ThroughputAccountGroupSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/ThroughputAccountGroupGroupingExpression"
          }
        ]
      },
      "ThroughputAccountGroupGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThroughputAccountGroupExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ThroughputAccountGroupQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ThroughputAccountGroupQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThroughputAccountGroup"
            }
          }
        }
      },
      "ThroughputAccountGroupSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "accountGroupId",
              "processDate"
            ]
          }
        }
      },
      "ThroughputAccountGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThroughputAccountExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "ThroughputAccountQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "ThroughputAccountQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThroughputAccount"
            }
          }
        }
      },
      "ThroughputAccountSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "environmentId",
              "atomId",
              "processDate"
            ]
          }
        }
      },
      "TopicSubscriber": {
        "type": "object",
        "properties": {
          "SubscriberName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "deadLettersCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "messageCount": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TrackedField": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "value": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TrackedFields": {
        "type": "object",
        "properties": {
          "trackedField": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrackedField"
            }
          }
        }
      },
      "TradacomsConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "applicationReference": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "date": {
            "type": "string"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "fileGenerationNumber": {
            "type": "string"
          },
          "fileVersionNumber": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "messageType": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "receiverName": {
            "type": "string"
          },
          "receiverTransmissionReference": {
            "type": "string"
          },
          "senderName": {
            "type": "string"
          },
          "senderTransmissionReference": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "successful": {
            "type": "boolean"
          },
          "time": {
            "type": "string"
          },
          "transmissionPriorityCode": {
            "type": "string"
          },
          "validationReport": {
            "type": "string"
          },
          "validationStatus": {
            "type": "string"
          }
        }
      },
      "TradacomsConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TradacomsConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/TradacomsConnectorRecordGroupingExpression"
          }
        ]
      },
      "TradacomsConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradacomsConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "TradacomsConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "TradacomsConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradacomsConnectorRecord"
            }
          }
        }
      },
      "TradacomsConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradacomsControlInfo": {
        "type": "object",
        "properties": {
          "STXControlInfo": {
            "type": "object"
          }
        }
      },
      "TradacomsOptions": {
        "type": "object",
        "properties": {
          "compositeDelimiter": {
            "type": "object"
          },
          "elementDelimiter": {
            "type": "object"
          },
          "filterAcknowledgements": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminator": {
            "type": "object"
          },
          "useReconciliationMessage": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradacomsPartnerInfo": {
        "type": "object",
        "properties": {
          "TradacomsControlInfo": {
            "type": "object"
          },
          "TradacomsOptions": {
            "type": "object"
          }
        }
      },
      "TradingPartner": {
        "type": "object",
        "properties": {
          "category": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartnerCategory"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradingPartnerCategory": {
        "type": "object",
        "properties": {
          "field": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          },
          "id": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "name": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradingPartnerComponent": {
        "required": [
          "ContactInfo",
          "PartnerCommunication",
          "PartnerDocumentTypes",
          "PartnerInfo"
        ],
        "type": "object",
        "properties": {
          "ContactInfo": {
            "type": "object"
          },
          "PartnerCommunication": {
            "type": "object"
          },
          "PartnerCommunicationTypes": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "PartnerCommunicationTypes"
              }
            }
          },
          "PartnerDocumentTypes": {
            "type": "object"
          },
          "PartnerInfo": {
            "type": "object"
          },
          "classification": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "tradingpartner",
              "mycompany"
            ]
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "folderId": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "folderName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "identifier": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "organizationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "standard": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "x12",
              "edifact",
              "hl7",
              "custom",
              "rosettanet",
              "tradacoms",
              "odette"
            ]
          }
        }
      },
      "TradingPartnerComponentBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "TradingPartnerComponentBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/TradingPartnerComponent"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "TradingPartnerComponentExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TradingPartnerComponentSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/TradingPartnerComponentGroupingExpression"
          }
        ]
      },
      "TradingPartnerComponentGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartnerComponentExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "TradingPartnerComponentQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "TradingPartnerComponentQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartnerComponent"
            }
          }
        }
      },
      "TradingPartnerComponentSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "name",
              "classification",
              "standard",
              "identifier",
              "as2",
              "disk",
              "ftp",
              "mllp",
              "sftp",
              "http",
              "oftp"
            ]
          }
        }
      },
      "TradingPartnerProcessingGroup": {
        "type": "object",
        "properties": {
          "DefaultRouting": {
            "type": "object"
          },
          "DocumentRouting": {
            "type": "object"
          },
          "PartnerRouting": {
            "type": "object"
          },
          "TradingPartners": {
            "type": "object"
          },
          "componentId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "componentName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "deleted": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "description": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "folderId": {
            "type": "integer",
            "format": "int64",
            "xml": {
              "attribute": true
            }
          },
          "folderName": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradingPartnerProcessingGroupBulkRequest": {
        "type": "object",
        "properties": {
          "request": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkId"
            }
          },
          "type": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "GET",
              "DELETE",
              "UPDATE",
              "CREATE"
            ]
          }
        }
      },
      "TradingPartnerProcessingGroupBulkResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "required": [
                "Result"
              ],
              "type": "object",
              "properties": {
                "Result": {
                  "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
                },
                "index": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "id": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                },
                "statusCode": {
                  "type": "integer",
                  "format": "int32",
                  "xml": {
                    "attribute": true
                  }
                },
                "errorMessage": {
                  "type": "string",
                  "xml": {
                    "attribute": true
                  }
                }
              }
            }
          }
        }
      },
      "TradingPartnerProcessingGroupExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/TradingPartnerProcessingGroupSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/TradingPartnerProcessingGroupGroupingExpression"
          }
        ]
      },
      "TradingPartnerProcessingGroupGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartnerProcessingGroupExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "TradingPartnerProcessingGroupQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "TradingPartnerProcessingGroupQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartnerProcessingGroup"
            }
          }
        }
      },
      "TradingPartnerProcessingGroupSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "LIKE",
              "NOT_EQUALS",
              "IS_NULL",
              "IS_NOT_NULL",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL",
              "CONTAINS",
              "NOT_CONTAINS"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "TradingPartners": {
        "type": "object",
        "properties": {
          "tradingPartner": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingPartner"
            }
          }
        }
      },
      "UNBControlInfo": {
        "type": "object",
        "properties": {
          "ackRequest": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "appReference": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "commAgreement": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeAddress": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "interchangeIdQual": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTIDQUAL_NA",
              "EDIFACTIDQUAL_1",
              "EDIFACTIDQUAL_4",
              "EDIFACTIDQUAL_5",
              "EDIFACTIDQUAL_8",
              "EDIFACTIDQUAL_9",
              "EDIFACTIDQUAL_12",
              "EDIFACTIDQUAL_14",
              "EDIFACTIDQUAL_18",
              "EDIFACTIDQUAL_22",
              "EDIFACTIDQUAL_30",
              "EDIFACTIDQUAL_31",
              "EDIFACTIDQUAL_33",
              "EDIFACTIDQUAL_34",
              "EDIFACTIDQUAL_51",
              "EDIFACTIDQUAL_52",
              "EDIFACTIDQUAL_53",
              "EDIFACTIDQUAL_54",
              "EDIFACTIDQUAL_55",
              "EDIFACTIDQUAL_57",
              "EDIFACTIDQUAL_58",
              "EDIFACTIDQUAL_59",
              "EDIFACTIDQUAL_61",
              "EDIFACTIDQUAL_63",
              "EDIFACTIDQUAL_65",
              "EDIFACTIDQUAL_80",
              "EDIFACTIDQUAL_82",
              "EDIFACTIDQUAL_84",
              "EDIFACTIDQUAL_85",
              "EDIFACTIDQUAL_86",
              "EDIFACTIDQUAL_87",
              "EDIFACTIDQUAL_89",
              "EDIFACTIDQUAL_90",
              "EDIFACTIDQUAL_91",
              "EDIFACTIDQUAL_92",
              "EDIFACTIDQUAL_103",
              "EDIFACTIDQUAL_128",
              "EDIFACTIDQUAL_129",
              "EDIFACTIDQUAL_144",
              "EDIFACTIDQUAL_145",
              "EDIFACTIDQUAL_146",
              "EDIFACTIDQUAL_147",
              "EDIFACTIDQUAL_148",
              "EDIFACTIDQUAL_Z01",
              "EDIFACTIDQUAL_ZZZ",
              "EDIFACTIDQUAL_ZZ"
            ]
          },
          "interchangeSubAddress": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "priority": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NA",
              "A"
            ]
          },
          "referencePassword": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "referencePasswordQualifier": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "NA",
              "AA",
              "BB"
            ]
          },
          "syntaxId": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "UNOA",
              "UNOB",
              "UNOC",
              "UNOD",
              "UNOE",
              "UNOF"
            ]
          },
          "syntaxVersion": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTSYNTAXVERSION_1",
              "EDIFACTSYNTAXVERSION_2",
              "EDIFACTSYNTAXVERSION_3"
            ]
          },
          "testIndicator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTTEST_NA",
              "EDIFACTTEST_1"
            ]
          }
        }
      },
      "UNGControlInfo": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "applicationIdQual": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTIDQUAL_NA",
              "EDIFACTIDQUAL_1",
              "EDIFACTIDQUAL_4",
              "EDIFACTIDQUAL_5",
              "EDIFACTIDQUAL_8",
              "EDIFACTIDQUAL_9",
              "EDIFACTIDQUAL_12",
              "EDIFACTIDQUAL_14",
              "EDIFACTIDQUAL_18",
              "EDIFACTIDQUAL_22",
              "EDIFACTIDQUAL_30",
              "EDIFACTIDQUAL_31",
              "EDIFACTIDQUAL_33",
              "EDIFACTIDQUAL_34",
              "EDIFACTIDQUAL_51",
              "EDIFACTIDQUAL_52",
              "EDIFACTIDQUAL_53",
              "EDIFACTIDQUAL_54",
              "EDIFACTIDQUAL_55",
              "EDIFACTIDQUAL_57",
              "EDIFACTIDQUAL_58",
              "EDIFACTIDQUAL_59",
              "EDIFACTIDQUAL_61",
              "EDIFACTIDQUAL_63",
              "EDIFACTIDQUAL_65",
              "EDIFACTIDQUAL_80",
              "EDIFACTIDQUAL_82",
              "EDIFACTIDQUAL_84",
              "EDIFACTIDQUAL_85",
              "EDIFACTIDQUAL_86",
              "EDIFACTIDQUAL_87",
              "EDIFACTIDQUAL_89",
              "EDIFACTIDQUAL_90",
              "EDIFACTIDQUAL_91",
              "EDIFACTIDQUAL_92",
              "EDIFACTIDQUAL_103",
              "EDIFACTIDQUAL_128",
              "EDIFACTIDQUAL_129",
              "EDIFACTIDQUAL_144",
              "EDIFACTIDQUAL_145",
              "EDIFACTIDQUAL_146",
              "EDIFACTIDQUAL_147",
              "EDIFACTIDQUAL_148",
              "EDIFACTIDQUAL_Z01",
              "EDIFACTIDQUAL_ZZZ",
              "EDIFACTIDQUAL_ZZ"
            ]
          },
          "useFunctionalGroups": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "UNHControlInfo": {
        "type": "object",
        "properties": {
          "assocAssignedCode": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "commonAccessRef": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          },
          "controllingAgency": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "AA",
              "AB",
              "AC",
              "AD",
              "AE",
              "CC",
              "CE",
              "EC",
              "ED",
              "EE",
              "EN",
              "ER",
              "EU",
              "EX",
              "IA",
              "KE",
              "LI",
              "OD",
              "RI",
              "RT",
              "UN"
            ]
          },
          "release": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTRELEASE_1",
              "EDIFACTRELEASE_2",
              "EDIFACTRELEASE_902",
              "EDIFACTRELEASE_911",
              "EDIFACTRELEASE_912",
              "EDIFACTRELEASE_921",
              "EDIFACTRELEASE_932",
              "EDIFACTRELEASE_93A",
              "EDIFACTRELEASE_94A",
              "EDIFACTRELEASE_94B",
              "EDIFACTRELEASE_95A",
              "EDIFACTRELEASE_95B",
              "EDIFACTRELEASE_96A",
              "EDIFACTRELEASE_96B",
              "EDIFACTRELEASE_97A",
              "EDIFACTRELEASE_97B",
              "EDIFACTRELEASE_98A",
              "EDIFACTRELEASE_98B",
              "EDIFACTRELEASE_99A",
              "EDIFACTRELEASE_99B",
              "EDIFACTRELEASE_00A",
              "EDIFACTRELEASE_00B",
              "EDIFACTRELEASE_01A",
              "EDIFACTRELEASE_01B",
              "EDIFACTRELEASE_02A",
              "EDIFACTRELEASE_02B",
              "EDIFACTRELEASE_03A",
              "EDIFACTRELEASE_03B",
              "EDIFACTRELEASE_04A",
              "EDIFACTRELEASE_04B",
              "EDIFACTRELEASE_05A",
              "EDIFACTRELEASE_05B",
              "EDIFACTRELEASE_06A",
              "EDIFACTRELEASE_06B",
              "EDIFACTRELEASE_07A",
              "EDIFACTRELEASE_07B",
              "EDIFACTRELEASE_08A",
              "EDIFACTRELEASE_08B",
              "EDIFACTRELEASE_09A",
              "EDIFACTRELEASE_09B"
            ]
          },
          "version": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EDIFACTVERSION_1",
              "EDIFACTVERSION_2",
              "EDIFACTVERSION_4",
              "EDIFACTVERSION_88",
              "EDIFACTVERSION_89",
              "EDIFACTVERSION_90",
              "EDIFACTVERSION_D",
              "EDIFACTVERSION_S"
            ]
          }
        }
      },
      "X12ConnectorRecord": {
        "required": [
          "account",
          "actionType",
          "atomId",
          "connectorName",
          "connectorType",
          "customFields",
          "dateProcessed",
          "errorMessage",
          "executionId",
          "id",
          "operationName"
        ],
        "type": "object",
        "properties": {
          "account": {
            "type": "string"
          },
          "ackReport": {
            "type": "string"
          },
          "ackStatus": {
            "type": "string"
          },
          "actionType": {
            "type": "string"
          },
          "agencyCode": {
            "type": "string"
          },
          "appReceiverID": {
            "type": "string"
          },
          "appSenderID": {
            "type": "string"
          },
          "atomId": {
            "type": "string"
          },
          "connectorName": {
            "type": "string"
          },
          "connectorType": {
            "type": "string"
          },
          "customFields": {
            "type": "object"
          },
          "dateProcessed": {
            "type": "string",
            "format": "date-time"
          },
          "documentIndex": {
            "type": "integer",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string"
          },
          "executionId": {
            "type": "string"
          },
          "functionalID": {
            "type": "string"
          },
          "gsControl": {
            "type": "string"
          },
          "gsDate": {
            "type": "string"
          },
          "gsTime": {
            "type": "string"
          },
          "gsVersion": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "isaAckReport": {
            "type": "string"
          },
          "isaAckStatus": {
            "type": "string"
          },
          "isaControl": {
            "type": "string"
          },
          "operationName": {
            "type": "string"
          },
          "outboundValidationReport": {
            "type": "string"
          },
          "outboundValidationStatus": {
            "type": "string"
          },
          "receiverID": {
            "type": "string"
          },
          "receiverIDQualifier": {
            "type": "string"
          },
          "senderID": {
            "type": "string"
          },
          "senderIDQualifier": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "stControl": {
            "type": "string"
          },
          "standard": {
            "type": "string"
          },
          "standardID": {
            "type": "string"
          },
          "successful": {
            "type": "boolean"
          },
          "testIndicator": {
            "type": "string"
          },
          "transactionSet": {
            "type": "string"
          }
        }
      },
      "X12ConnectorRecordExpression": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/X12ConnectorRecordSimpleExpression"
          },
          {
            "$ref": "#/components/schemas/X12ConnectorRecordGroupingExpression"
          }
        ]
      },
      "X12ConnectorRecordGroupingExpression": {
        "required": [
          "operator"
        ],
        "type": "object",
        "properties": {
          "nestedExpression": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X12ConnectorRecordExpression"
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "and",
              "or"
            ]
          }
        }
      },
      "X12ConnectorRecordQueryConfig": {
        "required": [
          "QueryFilter"
        ],
        "type": "object",
        "properties": {
          "QueryFilter": {
            "required": [
              "expression"
            ],
            "type": "object",
            "properties": {
              "expression": {
                "type": "object"
              }
            }
          }
        }
      },
      "X12ConnectorRecordQueryResponse": {
        "type": "object",
        "properties": {
          "numberOfResults": {
            "type": "integer",
            "format": "int32",
            "xml": {
              "attribute": true
            }
          },
          "queryToken": {
            "type": "string"
          },
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X12ConnectorRecord"
            }
          }
        }
      },
      "X12ConnectorRecordSimpleExpression": {
        "required": [
          "operator",
          "property"
        ],
        "type": "object",
        "properties": {
          "argument": {
            "type": "array",
            "items": {
              "type": "string",
              "xml": {
                "name": "argument"
              }
            }
          },
          "operator": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "EQUALS",
              "STARTS_WITH",
              "BETWEEN",
              "GREATER_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "property": {
            "type": "string",
            "xml": {
              "attribute": true
            }
          }
        }
      },
      "X12ControlInfo": {
        "type": "object",
        "properties": {
          "GSControlInfo": {
            "type": "object"
          },
          "isaControlInfo": {
            "type": "object"
          }
        }
      },
      "X12Options": {
        "required": [
          "elementDelimiter",
          "segmentTerminator"
        ],
        "type": "object",
        "properties": {
          "acknowledgementoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "donotackitem",
              "ackfuncitem",
              "acktranitem"
            ]
          },
          "elementDelimiter": {
            "type": "object"
          },
          "envelopeoption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "groupall",
              "groupfg",
              "groupst"
            ]
          },
          "filteracknowledgements": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundInterchangeValidation": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "outboundValidationOption": {
            "type": "string",
            "xml": {
              "attribute": true
            },
            "enum": [
              "filterError",
              "failAll"
            ]
          },
          "rejectDuplicateInterchange": {
            "type": "boolean",
            "xml": {
              "attribute": true
            }
          },
          "segmentTerminator": {
            "type": "object"
          }
        }
      },
      "X12PartnerInfo": {
        "type": "object",
        "properties": {
          "X12ControlInfo": {
            "type": "object"
          },
          "X12Options": {
            "type": "object"
          }
        }
      },
      "customFields": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "responses": {
      "403": {
        "description": "Missing or incorrect authentication credentials."
      },
      "410": {
        "description": "Endpoint is invalid or no longer exists."
      },
      "503": {
        "description": "The Boomi server is currently unavailable or your account's rate limits have been exceeded. Retry the request at a later time."
      }
    },
    "headers": {
      "Deprecation": {
        "description": "Indicates that the api you are using is deprecated and will be removed at some point. Includes the date that this was initially deprecated.",
        "schema": {
          "type": "string"
        }
      },
      "Link": {
        "description": "A hyperlink indicating a site with more information about the deprecation of this object.",
        "schema": {
          "type": "string"
        }
      },
      "Sunset": {
        "description": "The approximate date the API Object will be removed.",
        "schema": {
          "type": "string"
        }
      },
      "Warning": {
        "description": "Informative header describing a warning that appeared due to your API call",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}